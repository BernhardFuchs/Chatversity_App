{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Core/_guards/auth.guard.ts","webpack:///./src/app/Core/_guards/route.guard.ts","webpack:///./src/app/Core/_models/form-validation.ts","webpack:///./src/app/Core/_services/auth.service.ts","webpack:///./src/app/Core/_services/messaging.service.ts","webpack:///./src/app/Core/_services/user.service.ts","webpack:///./src/app/Core/callback/callback.component.ts","webpack:///./src/app/Core/protected/protected.component.ts","webpack:///./src/app/Error-Views/error/error.component.css","webpack:///./src/app/Error-Views/error/error.component.html","webpack:///./src/app/Error-Views/error/error.component.ts","webpack:///./src/app/Error-Views/page-not-found/page-not-found.component.css","webpack:///./src/app/Error-Views/page-not-found/page-not-found.component.html","webpack:///./src/app/Error-Views/page-not-found/page-not-found.component.ts","webpack:///./src/app/Home/view-friends-home/view-friends-home.component.css","webpack:///./src/app/Home/view-friends-home/view-friends-home.component.html","webpack:///./src/app/Home/view-friends-home/view-friends-home.component.ts","webpack:///./src/app/Home/view-latest-news/view-latest-news.component.css","webpack:///./src/app/Home/view-latest-news/view-latest-news.component.html","webpack:///./src/app/Home/view-latest-news/view-latest-news.component.ts","webpack:///./src/app/Home/view-navigation-home/view-navigation-home.component.css","webpack:///./src/app/Home/view-navigation-home/view-navigation-home.component.html","webpack:///./src/app/Home/view-navigation-home/view-navigation-home.component.ts","webpack:///./src/app/Onboarding/forgot/forgot.component.css","webpack:///./src/app/Onboarding/forgot/forgot.component.html","webpack:///./src/app/Onboarding/forgot/forgot.component.ts","webpack:///./src/app/Onboarding/login/login.component.css","webpack:///./src/app/Onboarding/login/login.component.html","webpack:///./src/app/Onboarding/login/login.component.ts","webpack:///./src/app/Onboarding/new-user/new-user.component.css","webpack:///./src/app/Onboarding/new-user/new-user.component.html","webpack:///./src/app/Onboarding/new-user/new-user.component.ts","webpack:///./src/app/Onboarding/signup/signup.component.css","webpack:///./src/app/Onboarding/signup/signup.component.html","webpack:///./src/app/Onboarding/signup/signup.component.ts","webpack:///./src/app/Profile-Views/profile/profile.component.css","webpack:///./src/app/Profile-Views/profile/profile.component.html","webpack:///./src/app/Profile-Views/profile/profile.component.ts","webpack:///./src/app/Profile-Views/settings-profile/settings-profile.component.html","webpack:///./src/app/Profile-Views/settings-profile/settings-profile.component.scss","webpack:///./src/app/Profile-Views/settings-profile/settings-profile.component.ts","webpack:///./src/app/Profile-Views/small/small.component.css","webpack:///./src/app/Profile-Views/small/small.component.html","webpack:///./src/app/Profile-Views/small/small.component.ts","webpack:///./src/app/Settings-Views/connection-settings/connection-settings.component.css","webpack:///./src/app/Settings-Views/connection-settings/connection-settings.component.html","webpack:///./src/app/Settings-Views/connection-settings/connection-settings.component.ts","webpack:///./src/app/Settings-Views/privacy-settings/privacy-settings.component.css","webpack:///./src/app/Settings-Views/privacy-settings/privacy-settings.component.html","webpack:///./src/app/Settings-Views/privacy-settings/privacy-settings.component.ts","webpack:///./src/app/Settings-Views/security-settings/security-settings.component.css","webpack:///./src/app/Settings-Views/security-settings/security-settings.component.html","webpack:///./src/app/Settings-Views/security-settings/security-settings.component.ts","webpack:///./src/app/Settings-Views/settings/settings.component.html","webpack:///./src/app/Settings-Views/settings/settings.component.scss","webpack:///./src/app/Settings-Views/settings/settings.component.ts","webpack:///./src/app/Shared/footer/footer.component.css","webpack:///./src/app/Shared/footer/footer.component.html","webpack:///./src/app/Shared/footer/footer.component.ts","webpack:///./src/app/Shared/navbar/navbar.component.html","webpack:///./src/app/Shared/navbar/navbar.component.scss","webpack:///./src/app/Shared/navbar/navbar.component.ts","webpack:///./src/app/Shared/top-bar/top-bar.component.css","webpack:///./src/app/Shared/top-bar/top-bar.component.html","webpack:///./src/app/Shared/top-bar/top-bar.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.scss","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/rooms/rooms.component.html","webpack:///./src/app/rooms/rooms.component.scss","webpack:///./src/app/rooms/rooms.component.ts","webpack:///./src/app/scroll-to-top.directive.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///xhr2 (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      if (this.authService.userLoggedIn()) {\n        // User authorized so return true\n        console.log('USER AUTHORIZED');\n        return true;\n      }\n\n      console.log('USER NOT AUTHORIZED');\n\n      // not logged in so redirect to login page via UrlTree\n      const url = '/login';\n      const tree: UrlTree = this.router.parseUrl(url);\n      return tree;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RouteGuard implements CanActivate {\n  returnUrl: string;\n  tree: UrlTree;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const currentUser = this.authService.userLoggedIn();\n        // console.log(state.url);\n        // console.log(currentUser);\n\n        if (currentUser) {\n\n          // User is authorized\n          if (state.url === '/login') {\n            this.returnUrl = '/home';\n            this.tree = this.router.parseUrl(this.returnUrl);\n            return this.tree;\n           }\n          return true;\n        }\n        // User is authorized\n        if (state.url === '/login') {\n          return true;\n        }\n        return false;\n    }\n}\n","export class CustomFormValidation {\n    eduEmailValidation:string = '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-.]+.[e]+[d]+[u]+$';\n    regularEmailValidation:string = '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$';\n    passwordValidation:string = '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$';\n}","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport { BehaviorSubject, Subject, ReplaySubject, Observable, } from 'rxjs';\nimport { MessagingService } from './messaging.service';\nimport {parse, stringify} from 'flatted';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthService {\n    private _currentUser: ReplaySubject<any>;\n\n    constructor(private http: HttpClient, private messageService: MessagingService, private router: Router ) {\n        this._currentUser = new ReplaySubject<any>(1);\n        this.initializeApp();\n        console.log('Auth service constructed');\n    }\n\n    get currentUser() {\n        return this._currentUser.asObservable();\n    }\n\n    set currentUser(user: any) {\n        console.log('setting current user');\n        this._currentUser.next(user);\n    }\n\n    getCurrentUser(): Observable<any> {\n        return this._currentUser.asObservable();\n    }\n\n\n    getUserId() {\n        return localStorage.getItem('chatkitUserId');\n    }\n\n\n\n    initializeApp() {\n        this.messageService.initChatkit(localStorage.getItem('chatkitUserId'))\n        .then(chatkitUser => {\n            console.log('setting chatkit user');\n            localStorage.setItem('chatkitUser', chatkitUser);\n            this._currentUser.next(chatkitUser);\n        });\n    }\n\n    userLoggedIn() {\n        return localStorage.getItem('chatkitUserId') != null;\n    }\n\n\n\n    //\n    // ─── SEND SIGN UP REQUEST TO SERVER ─────────────────────────────────────────────\n    //\n\n        signup(fname: string, lname: string, university: string, username: string, password: string) {\n            // Create Okta User\n            return this.http.post<any>(`${environment.apiUrl}/okta/signup`, { fname, lname, username, password })\n            .toPromise()\n            .then(user => {\n                // console.log(user);\n                // Create chatkit user from Okta User ID\n                return this.http.post(`${environment.apiUrl}/chatkit/createuser`, {\n                    id: user.id,\n                    name: user.profile.firstName + ' ' + user.profile.lastName,\n                    custom_data: {\n                        connections: [],\n                        connectionRequests: [],\n                        bio: '',\n                        university: university,\n                        graduationYear: '',\n                        interests: '',\n                        clubs: '',\n                        major: '',\n                        privateAccount: false,\n                        showActivityStatus: true,\n                    }\n            })\n            .toPromise()\n            .then((chatkitUser) => {\n                    // Created Chatkit user\n                    // console.log('Created Chatkit user!');\n                    console.log(chatkitUser);\n\n                    return this.login(username, password).then(loggedinUser => {\n                        return loggedinUser;\n                    });\n                });\n            });\n        }\n    // ─────────────────────────────────────────────────────────────────\n\n\n\n    //\n    // ─── VALIDATE LOGIN THROUGH OKTA ────────────────────────────────────────────────\n    //\n\n        login(username: string, password: string) {\n            return this.http.post<any>(`${environment.apiUrl}/okta/login`, { username, password })\n            .toPromise()\n            .then((user) => {\n\n                console.log('LOGGED IN OKTA USER: ', user);\n\n                localStorage.setItem('OktaUser', JSON.stringify(user));\n\n                return user;\n            });\n        }\n    // ─────────────────────────────────────────────────────────────────\n\n\n\n    //\n    // ─── HANDLE LOGOUT ──────────────────────────────────────────────────────────────\n    //\n\n        logout() {\n            localStorage.clear();\n            this.router.navigate(['/login']);\n            console.clear();\n        }\n    // ─────────────────────────────────────────────────────────────────\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport {AuthService} from './auth.service';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport { User } from '../_models/user';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment.prod';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n\n\n  chatManager: any;\n  currentUser: any;\n  latestRoom: any;\n  latestReadCursor: any;\n  messages: Array<any> = [];\n  constructor(private http: HttpClient) { console.log('Messaging service constructed'); }\n\n\n\n  //\n  // ─── SET READ CURSOR ────────────────────────────────────────────────────────────\n  //\n\n    setLatestReadCursor(user, roomId) {\n\n      // get position (ID) of latest room message\n      this.fetchMessages(user, roomId, '', '', 1).then((messages) => {\n        console.log(messages);\n\n        // set position of cursor to match\n        user.setReadCursor({\n            roomId: roomId,\n            position: messages[0].id\n          })\n          .then(() => {\n            user.rooms.forEach(room => {\n              if (room.id === messages[0].roomId) {\n                this.latestRoom = room;\n              }\n            });\n            console.log(`Set read cursor in room ${roomId} with position ${messages[0].id}`);\n          })\n          .catch(err => {\n            console.log(`Error setting cursor: ${err}`);\n          });\n      });\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── SET READ CURSOR ────────────────────────────────────────────────────────────\n  //\n\n    setReadCursor(user, roomId, position) {\n\n      user.setReadCursor({\n          roomId: roomId,\n          position: position\n        })\n        .then(() => {\n          console.log(`Set read cursor in room ${roomId}`);\n        })\n        .catch(err => {\n          console.log(`Error setting cursor: ${err}`);\n        });\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── GET LATEST ROOM ────────────────────────────────────────────────────────────\n  //\n\n    getLatestRoom(user) {\n      console.log('getting latest room');\n      if (this.latestRoom) { return this.latestRoom; }\n\n      let latestRoom;\n      const latestReadCursor = this.getLatestReadCursor(user);\n      console.log(latestReadCursor);\n\n\n      user.rooms.forEach(room => {\n        console.log(room.id);\n        console.log(latestReadCursor.roomId);\n\n        if (room.id === latestReadCursor.roomId) { latestRoom = room; }\n\n      });\n\n      return latestRoom;\n\n      // return user.rooms.forEach(room => {\n      //   console.log(room.id);\n      //   console.log(latestReadCursor.roomId);\n\n      //   while (room.id)\n\n      //   if (room.id === latestReadCursor.roomId) { return room; }\n\n      //   // if (latestRoom) { console.log('Got latest room'); return latestRoom; }/\n\n      // });\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── GET LATEST CURSOR ──────────────────────────────────────────────────────────\n  //\n\n    getLatestReadCursor(user) {\n\n      if (this.latestReadCursor) { return this.latestReadCursor; }\n\n      const cursors = [];\n\n      // first, get user cursor from each room\n      user.rooms.forEach(room => {\n        cursors.push(user.readCursor({ roomId: room.id }));\n      });\n\n      console.log(cursors);\n      \n      // then sort to find lowest\n      const sorted = cursors.sort();\n      console.log(sorted);\n      \n      const latestCursor = sorted[0];\n\n      this.latestReadCursor = latestCursor;\n      return latestCursor;\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  fetchMessages(user, roomId, initialId?, direction = 'older', limit = 0) {\n\n    return user.fetchMultipartMessages({\n      roomId: roomId,\n      initialId: initialId,\n      direction: direction,\n      limit: limit,\n    })\n      .then(messages => {\n        return messages;\n      })\n      .catch(err => {\n        console.log(`Error fetching messages: ${err}`);\n      });\n  }\n\n\n\n\n  //\n  // ─── JOIN ROOM ───────────────────────────────────────────────────\n  //\n\n    joinRoom(user: any, roomId: any) {\n\n    return user.joinRoom({roomId: roomId})\n        .then(room => {\n          this.setLatestReadCursor(user, roomId);\n          return room;\n        })\n        .catch(err => {\n          console.log(`Error joining room ${roomId}: ${err}`);\n        });\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n\n  subscribeToAllRooms() {\n\n    const currentUser = this.currentUser;\n\n    if (! currentUser.rooms.length) { return; }\n\n    currentUser.rooms.forEach(room => {\n      currentUser.subscribeToRoomMultipart({\n          roomId: room.id,\n          hooks: {\n              onMessage: message => {\n                // console.log('Received message', message);\n                this.messages.push(message);\n              }\n          },\n          messageLimit: 10\n      });\n    });\n  }\n\n\n\n  initChatkit(userId) {\n\n    this.chatManager = new ChatManager({\n      instanceLocator: 'v1:us1:a54bdf12-93d6-46f9-be3b-bfa837917fb5',\n      userId: userId,\n      tokenProvider: new TokenProvider({\n        url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/a54bdf12-93d6-46f9-be3b-bfa837917fb5/token'\n      })\n    });\n\n    return this.chatManager.connect({\n      onAddedToRoom: room => {\n        console.log(`Added to room ${room.name}`);\n      },\n      onRemovedFromRoom: room => {\n        console.log(`Removed from room ${room.name}`);\n      },\n      onRoomUpdated: room => {\n        console.log(`Updated room ${room.name}`);\n      },\n      onRoomDeleted: room => {\n        console.log(`Deleted room ${room.name}`);\n      }\n    })\n      .then(user => {\n\n        console.log(`Connected as ${user.name}. \\n Setting up rooms...`);\n\n        this.currentUser = user;\n\n        localStorage.setItem('chatkitUserId', user.id);\n\n        // If user has no rooms then return\n        if (!user.rooms.length) { return; }\n\n        // Subscribe to all user rooms to be notified of new messages\n        this.subscribeToAllRooms();\n\n        // Join the latest room\n\n          console.log(user);\n\n        const latestRoom = this.getLatestRoom(user);\n        console.log(latestRoom);\n        \n        this.joinRoom(user, latestRoom.id);\n        // this.getLatestRoom(user).then((room) => {\n        //   this.joinRoom(user, room.id);\n        // });\n\n\n        return user;\n      });\n  }\n\n\n\n  getMessages() {\n  return this.http.get('');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { User } from '../_models/user';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    //\n    // ─── GET ALL CONNECTIONS FOR A GIVEN USER ───────────────────────────────────────────────────\n    //\n\n        getConnections(id: number) {\n            return this.http.get(`${environment.apiUrl}/chatkit/connections/${id}`);\n        }\n    // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n    //\n    // ─── UPDATE ──────────────────────────────────────────────────────────────\n    //\n\n        update(userId, data) {\n            const headers = new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            });\n\n            return this.http.post(`${environment.apiUrl}/chatkit/user/${userId}`, data, {headers: headers});\n        }\n    // ─────────────────────────────────────────────────────────────────\n\n\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getById(id: number) {\n        return this.http.get(`${environment.apiUrl}/okta/users/` + id);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n\n    // update(user: any) {\n    //     console.log(user);\n    //     return this.http.put(`${environment.apiUrl}/updateUser/` + user.id, user);\n    // }\n\n    delete(id: number) {\n        return this.http.delete(`${environment.apiUrl}/okta/users/` + id);\n    }\n}\n","// callback.component.ts\n\n// tslint:disable-next-line:max-line-length\n/* In order to handle the redirect back from Okta, we need to capture the token values from the URL. Use the /callback route to handle the logic of storing these tokens and redirecting back to the main page. */\n\nimport { Component } from '@angular/core';\nimport { OktaAuthService } from '@okta/okta-angular';\n\n@Component({ template: `` })\nexport class CallbackComponent {\n\n  constructor(private okta: OktaAuthService) {\n    // Handles the response from Okta and parses tokens\n    okta.handleAuthentication();\n  }\n}\n","// protected.component.ts\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-secure',\n  template: ``\n})\nexport class ProtectedComponent {\n  constructor() { console.log('Protected endpont!'); }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Vycm9yLVZpZXdzL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  error works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Vycm9yLVZpZXdzL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Main Container Div -->\\n<section class=\\\"py-5\\\" style=\\\"min-height:100vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"text-center mt-5\\\">\\n      <h1 class=\\\"display-1 text-secondary\\\">404 Error</h1>\\n      <p class=\\\"h2 text-light text-light-weight mt-3 mb-5\\\">&mdash; Page Not Found &mdash;</p>\\n      <div class=\\\"pt-5 pb-3\\\">\\n        <a [routerLink]=\\\"['/home']\\\"><button class=\\\"btn btn-primary px-4 py-2\\\">Return Home</button></a>\\n      </div>\\n      <div>\\n        <a [routerLink]=\\\"['/login']\\\">Login</a>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".user-card{\\n    background-color: white;\\n    border: 1px solid #DAE6ED;\\n    border-radius: 5px;\\n}\\n.user-card:hover{\\n    background-color: transparent;\\n}\\n.card-img{\\n    max-width: 40px;\\n    border-width: 2px !important;\\n    border: 2px solid #96B7C9;\\n}\\n.border-online{\\n    border: 2px solid #00e600;\\n}\\n#search{\\n    border-radius: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvSG9tZS92aWV3LWZyaWVuZHMtaG9tZS92aWV3LWZyaWVuZHMtaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksZUFBZTtJQUNmLDRCQUE0QjtJQUM1Qix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvSG9tZS92aWV3LWZyaWVuZHMtaG9tZS92aWV3LWZyaWVuZHMtaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItY2FyZHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREFFNkVEO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi51c2VyLWNhcmQ6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4uY2FyZC1pbWd7XG4gICAgbWF4LXdpZHRoOiA0MHB4O1xuICAgIGJvcmRlci13aWR0aDogMnB4ICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzk2QjdDOTtcbn1cbi5ib3JkZXItb25saW5le1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMwMGU2MDA7XG59XG4jc2VhcmNoe1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container-fluid mt-4\\\">\\n\\n  <app-small id=\\\"profileModal\\\" *ngIf=\\\"connection\\\" [user]=\\\"connection\\\" [isConnection]=\\\"isConnection\\\"></app-small>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n  <!-- Actions -->\\n  <ul class=\\\"nav nav-pills\\\" id=\\\"pills-connection-actions-tab\\\" role=\\\"tablist\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addConnectionModal\\\">Add Connection</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link active\\\" href=\\\"#pills-all-connections\\\" id=\\\"pills-all-connections-tab\\\" data-toggle=\\\"pill\\\" role=\\\"tab\\\" aria-controls=\\\"pills-all-connections\\\" aria-selected=\\\"true\\\">All</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#pills-online-connections\\\" id=\\\"pills-online-connections-tab\\\" data-toggle=\\\"pill\\\"  role=\\\"tab\\\" aria-controls=\\\"pills-online-connections\\\" aria-selected=\\\"false\\\">Online</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#pills-pending-connections\\\" id=\\\"pills-pending-connections-tab\\\" data-toggle=\\\"pill\\\"  role=\\\"tab\\\" aria-controls=\\\"pills-pending-connections\\\" aria-selected=\\\"false\\\">Pending</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#pills-search-connections\\\" id=\\\"pills-search-connections-tab\\\" data-toggle=\\\"pill\\\"  role=\\\"tab\\\" aria-controls=\\\"pills-search-connections\\\" aria-selected=\\\"false\\\">Search</a>\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"tab-content\\\" id=\\\"pills-connection-actions-tabContent\\\">\\n    <!-- All connections -->\\n    <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-all-connections\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-all-connections\\\">\\n      <div class=\\\"my-5\\\">\\n        <span class=\\\"sr-only\\\">All Connections</span>\\n        <ng-container *ngIf=\\\"connections\\\">\\n          <div *ngFor=\\\"let c of connections\\\" class=\\\"my-2 user-card\\\">\\n              <button class=\\\"btn btn-block text-left px-3 py-2\\\" data-toggle=\\\"modal\\\" data-target=\\\"#profileModal\\\"\\n              (click)=\\\"connection = c\\\">\\n                  <img src=\\\"\\\" onerror=\\\"this.src='../../assets/images/DefaultProfile.png'\\\"\\n                  class=\\\"circle img-fluid rounded-circle card-img\\\" [ngClass]=\\\"{ 'border-online': c.active }\\\"/> \\n      \\n                  <span class=\\\"text-secondary font-weight-bold ml-3\\\">\\n                    {{ c.name }}\\n                    <small style=\\\"font-size:12px; color:#96b7c9;\\\">{{ appUser.presenceStore[c.id] }}</small>\\n                  </span>\\n              </button>\\n            </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <!-- End All connections -->\\n    <!--Online connections-->\\n    <div class=\\\"tab-pane fade\\\" id=\\\"pills-online-connections\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-online-connections\\\">\\n      <div class=\\\"my-5\\\">\\n        <span class=\\\"sr-only\\\">Online Connections</span>\\n        <div *ngFor=\\\"let c of connections\\\" class=\\\"my-2 user-card\\\">\\n          <button class=\\\"btn btn-block text-left px-3 py-2\\\" data-toggle=\\\"modal\\\" data-target=\\\"#profileModal\\\"\\n          (click)=\\\"connection = c\\\">\\n              <img src=\\\"...\\\" onerror=\\\"this.src='../../assets/images/DefaultProfile.png'\\\"\\n              class=\\\"circle img-fluid rounded-circle card-img\\\" [ngClass]=\\\"{ 'border-online': c.active }\\\"/> \\n              <span class=\\\"text-secondary font-weight-bold ml-3\\\">\\n                  {{ c.name }}\\n                  <small style=\\\"font-size:12px; color:#96b7c9;\\\">{{ appUser.presenceStore[c.id] }}</small>\\n                </span>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- End online connections -->\\n    <div class=\\\"tab-pane fade\\\" id=\\\"pills-pending-connections\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-pending-connections\\\">\\n      Pending\\n    </div>\\n\\n    <div class=\\\"tab-pane fade\\\" id=\\\"pills-search-connections\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-search-connections\\\">\\n      <!--Search connections-->\\n      <form [formGroup]=\\\"searchForm\\\" class=\\\"my-4\\\">\\n          <!--Search Bar-->\\n          <div class=\\\"form-group mb-3\\\">\\n              <input type=\\\"search\\\" required class=\\\"form-control primary-border\\\" id=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" \\n              formControlName=\\\"search\\\" (input)=\\\"onSearch()\\\">\\n          </div>\\n      </form>\\n\\n      <!--Connection search results-->\\n      <div class=\\\"my-2 search-results\\\" *ngIf=\\\"(submitted && !searchForm.invalid)\\\">\\n        <div *ngIf=\\\"(results.length > 0)\\\">\\n            <div *ngFor=\\\"let result of results\\\">\\n                <button class=\\\"btn btn-block text-left px-3 py-2 my-2 user-card\\\" data-toggle=\\\"modal\\\" data-target=\\\"#profileModal\\\"\\n                (click)=\\\"setUser(result.id)\\\">\\n                    <img src=\\\"...\\\" onerror=\\\"this.src='../../assets/images/DefaultProfile.png'\\\"\\n                    class=\\\"circle img-fluid rounded-circle card-img\\\" [ngClass]=\\\"{ 'border-online': result.active }\\\"/> \\n        \\n                    <span class=\\\"text-secondary ml-3\\\">{{ result.firstName }} {{ result.lastName }}</span>\\n                </button>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border text-whiet\\\" role=\\\"status\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n        \\n        <div *ngIf=\\\"(results.length == 0)\\\" class=\\\"ml-2\\\">\\n          <span class=\\\"text-light\\\">Sorry, we could not find any results.</span>\\n        </div>\\n\\n        <hr *ngIf=\\\"(results.length > 0)\\\">\\n      </div>\\n      <!-- End connection search results -->\\n      <!-- End Search connections -->\\n    </div>\\n  </div>\\n</div>\\n  <!-- End Actions -->\\n</div> \\n\\n\\n  <!-- Add connection modal -->\\n  <div class=\\\"modal fade\\\" id=\\\"addConnectionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addConnectionModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"addConnectionModalLabel\\\">Add connection</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form (ngSubmit)=\\\"addConnection()\\\">\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"connectionToAdd\\\" id=\\\"name\\\" required aria-describedby=\\\"addConnectionHelpBlock\\\">\\n                <small id=\\\"addConnectionHelpBlock\\\" class=\\\"form-text text-muted\\\">\\n                    Enter the email of the connection you wish to add:\\n                </small>\\n            </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Send</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- End connection modal -->\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { User } from '../../Core/_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment.prod';\nimport { UserService } from '../../Core/_services/user.service';\nimport { MessagingService } from '../../Core/_services/messaging.service';\nimport { AppComponent } from '../../app.component';\nimport { AuthService } from '../../Core/_services/auth.service';\n\n@Component({\n  selector: 'app-view-friends-home',\n  templateUrl: './view-friends-home.component.html',\n  styleUrls: ['./view-friends-home.component.css']\n})\nexport class ViewFriendsHomeComponent implements OnInit {\n\n  searchForm: FormGroup;\n  loading = false;\n  submitted = false;\n  connections: any;\n  connection: User;\n  isConnection = false;\n  currUser: any;\n  appUser: any;\n  results: User[];\n  // Field for connection\n  connectionToAdd = new FormControl('');\n  subscription: any;\n  rooms: any;\n\n  currentUser: any;\n\n  //\n  // ─── CONSTRUCTOR ────────────────────────────────────────────────────────────────\n  //\n\n    constructor(private http: HttpClient,\n      private formBuilder: FormBuilder,\n      private _userService: UserService,\n      private _msgService: MessagingService,\n      private app: AppComponent,\n      private authService: AuthService) { this.currentUser = authService.currentUser; }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── CONVENIENCE GETTER FOR EASY ACCESS TO FORM FIELDS ──────────────────────────\n  //\n\n    get f() { return this.searchForm.controls; }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── ADD CONNECTION ─────────────────────────────────────────────────────────────\n  //\n\n    addConnection() {\n      console.log(this.connectionToAdd.value);\n      // Get okta user by login (email)\n      this.http.get(`${environment.apiUrl}/okta/GetUserByLogin/${this.connectionToAdd.value}` )\n      .toPromise()\n      .then((oktaUser) => {\n        console.log(oktaUser);\n        // Get the user from Chatkit by matching the IDs\n        this.http.get(`${environment.apiUrl}/chatkit/GetUserById/${oktaUser['id']}`)\n        .toPromise()\n        .then((currentUser) => {\n          // Found user => add 'connection request marker' to custom data field\n          // TODO: Check if users are already connected\n\n        })\n        .catch((error) => {\n          console.log('Chatkit user not found!');\n        });\n      })\n      .catch((error) => {\n        console.log('Okta user not found!');\n      });\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── RETURN USER FROM FRIEND LIST ───────────────────────────────────────────────\n  //\n\n    getUser(_id: number): User {\n      return this.connections.find(c => c.id === _id);\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n  //\n  // ─── SORT CONNECTIONS LIST ──────────────────────────────────────────────────────\n  //\n\n    sortList(users: User[]) {\n      return  users.sort((a, b) => ((a.firstName.toLowerCase() + ' ' + a.lastName.toLowerCase())\n      > (b.firstName.toLowerCase() + ' ' + b.lastName.toLowerCase()) ? 1 : -1));\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── FILTER LIST OF USERS BY NAME ───────────────────────────────────────────────\n  //\n\n    getUsersByName(_name: string) {\n      _name = _name.toLowerCase();\n      this.results = this.connections.filter(c =>\n        (c.firstName.toLowerCase() + ' ' + c.lastName.toLowerCase()).includes(_name)).slice(0, 5);\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── CHECK IF USERS ARE FRIENDS ─────────────────────────────────────────────────\n  //\n\n    isConnected(_id: number) {\n      // Get current user data\n\n      // Check if this user is on the other user's connections list\n\n      // Toggle isConnection variable\n\n      return;\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── HANDLE CLICK USER BUTTON ───────────────────────────────────────────────────\n  //\n\n    setUser(_id: number) {\n      this.connection = this.getUser(_id);\n      this.isConnected(_id);\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── HANDLE SIGN UP ─────────────────────────────────────────────────────────────\n  //\n\n    onSearch() {\n      this.submitted = true;\n      this.loading = true;\n\n      if (this.searchForm.invalid) {\n        this.submitted = false;\n        this.loading = false;\n        return;\n      }\n\n      const query: string = this.searchForm.get('search').value;\n\n      this.getUsersByName(query);\n\n      this.loading = false;\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  ngOnInit() {\n\n    console.log(this.currentUser);\n\n\n    //\n    // ─── LOAD USER CONNECTIONS ───────────────────────────────────────\n    //\n\n      this._userService.getConnections(this.currentUser.id)\n      .toPromise()\n      .then((connections) => {\n        this.connections = connections;\n        console.log(connections);\n      });\n    // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n    //\n    // ─── SETUP SEARCH BOX ────────────────────────────────────────────\n    //\n\n      this.searchForm = this.formBuilder.group({\n        search: ['', Validators.required]\n      });\n    // ─────────────────────────────────────────────────────────────────\n\n  }\n}\n","module.exports = \".custom-shadow{\\n    box-shadow: 0 0px 2px #26B1FF;\\n}\\n.custom-shadow:hover{\\n    box-shadow: 0 0px 4px #26B1FF;\\n}\\n.latest-news-container{\\n    padding: 0;\\n}\\n.latest-news-card{\\n    padding: 15px;\\n}\\n.news-header{\\n    font-size: 1.5em;\\n}\\n@media (min-width: 768px){ /*Medium*/\\n    .latest-news-container{\\n        padding: 20px;\\n    }\\n    .latest-news-card{\\n        padding: 25px;\\n    }\\n    .news-header{\\n        font-size: 2.0em;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvSG9tZS92aWV3LWxhdGVzdC1uZXdzL3ZpZXctbGF0ZXN0LW5ld3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBLDJCQUEyQixTQUFTO0lBQ2hDO1FBQ0ksYUFBYTtJQUNqQjtJQUNBO1FBQ0ksYUFBYTtJQUNqQjtJQUNBO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9Ib21lL3ZpZXctbGF0ZXN0LW5ld3Mvdmlldy1sYXRlc3QtbmV3cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbS1zaGFkb3d7XG4gICAgYm94LXNoYWRvdzogMCAwcHggMnB4ICMyNkIxRkY7XG59XG4uY3VzdG9tLXNoYWRvdzpob3ZlcntcbiAgICBib3gtc2hhZG93OiAwIDBweCA0cHggIzI2QjFGRjtcbn1cbi5sYXRlc3QtbmV3cy1jb250YWluZXJ7XG4gICAgcGFkZGluZzogMDtcbn1cbi5sYXRlc3QtbmV3cy1jYXJke1xuICAgIHBhZGRpbmc6IDE1cHg7XG59XG4ubmV3cy1oZWFkZXJ7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7IC8qTWVkaXVtKi9cbiAgICAubGF0ZXN0LW5ld3MtY29udGFpbmVye1xuICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgIH1cbiAgICAubGF0ZXN0LW5ld3MtY2FyZHtcbiAgICAgICAgcGFkZGluZzogMjVweDtcbiAgICB9XG4gICAgLm5ld3MtaGVhZGVye1xuICAgICAgICBmb250LXNpemU6IDIuMGVtO1xuICAgIH1cbn0iXX0= */\"","module.exports = \"<div class=\\\"latest-news-container\\\">\\n  <div class=\\\"text-center border rounded my-4 mr-2 custom-shadow latest-news-card\\\" style=\\\"background-color: white;\\\">\\n    <img src=\\\"/assets/images/logo-mark-64.png\\\" class=\\\"img-fluid img-responsive mx-auto mb-4\\\" width=\\\"64px\\\"\\n      alt=\\\"Chatversity Logo Mark\\\">\\n    <div class=\\\"text-secondary h2 text-light-weight news-header\\\">Introducing Chatversity</div>\\n    <p class=\\\"text-light pt-3\\\">Connecting and collaborating with your fellow classmates has never been easier.</p>\\n  </div>\\n  <div class=\\\"text-left border rounded my-4 mr-2 custom-shadow latest-news-card\\\" style=\\\"background-color: white;\\\">\\n    <div class=\\\"text-secondary h2 text-light-weight news-header\\\">Connect with your Peers</div>\\n    <p class=\\\"text-light mb-4\\\">Chatversity is the newest platform for college and university students across the world. Ready to connect?</p>\\n    <a [routerLink]=\\\"['/rooms']\\\" [queryParams]=\\\"{view:'friends'}\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary text-uppercase px-4\\\" style=\\\"padding-top: 10px; padding-bottom: 10px;\\\">Get Started!</button></a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view-latest-news',\n  templateUrl: './view-latest-news.component.html',\n  styleUrls: ['./view-latest-news.component.css']\n})\nexport class ViewLatestNewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".custom-btn{\\n    border-radius: 5px;\\n    color: #96B7C9;\\n    background-color: #F1F8FC;\\n}\\n.custom-btn:hover{\\n    background-color: white;\\n    color: #0E425F;\\n    border: 1px solid #bddef1;\\n}\\n.active{\\n    background-color: white !important;\\n    color: #0E425F;\\n    border: 1px solid #bddef1;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvSG9tZS92aWV3LW5hdmlnYXRpb24taG9tZS92aWV3LW5hdmlnYXRpb24taG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixjQUFjO0lBQ2QseUJBQXlCO0FBQzdCO0FBRUE7SUFDSSxrQ0FBa0M7SUFDbEMsY0FBYztJQUNkLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL0hvbWUvdmlldy1uYXZpZ2F0aW9uLWhvbWUvdmlldy1uYXZpZ2F0aW9uLWhvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b20tYnRue1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogIzk2QjdDOTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGOEZDO1xufVxuLmN1c3RvbS1idG46aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY29sb3I6ICMwRTQyNUY7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2JkZGVmMTtcbn1cblxuLmFjdGl2ZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMEU0MjVGO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZGRlZjE7XG59XG4gICJdfQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height:100vh;\\\">\\n\\n  <app-top-bar [viewName]=\\\"'Home'\\\" [headerText]=\\\"headerText\\\"></app-top-bar>\\n\\n  <div class=\\\"row page-content\\\">\\n    <div class=\\\"col-12 col-lg-3\\\" style=\\\"background-color:#F1F8FC; border-bottom:1px solid #DAE6ED;\\\">\\n      <div class=\\\"my-3 px-1\\\">\\n        <button class=\\\"btn btn-block custom-btn text-left mr-4 my-2 p-3\\\" (click)=\\\"showHomeView()\\\"\\n        [ngClass]=\\\"{ 'active': HomeView.current }\\\">Latest News</button>\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"showFriendsView()\\\"\\n        [ngClass]=\\\"{ 'active': FriendsView.current }\\\">Connections</button>\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"showProfileView()\\\"\\n        [ngClass]=\\\"{ 'active': ProfileView.current }\\\">My Profile</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-12 col-lg-9\\\" style=\\\"background-color: #fafdff; border-left:1px solid #DAE6ED;\\\">\\n      <div *ngIf=\\\"HomeView.current\\\">\\n        <app-view-latest-news></app-view-latest-news>\\n      </div>\\n      <div *ngIf=\\\"FriendsView.current\\\">\\n        <app-view-friends-home></app-view-friends-home>\\n      </div>\\n      <div *ngIf=\\\"ProfileView.current\\\">\\n        <app-profile></app-profile>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { View } from '../../Core/_models/view';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-view-navigation-home',\n  templateUrl: './view-navigation-home.component.html',\n  styleUrls: ['./view-navigation-home.component.css']\n})\nexport class ViewNavigationHomeComponent implements OnInit {\n  HomeView: View = { id: 1, name: 'Latest News', current: false };\n  FriendsView: View = { id: 2, name: 'Connections', current: false };\n  ProfileView: View = { id: 3, name: 'Profile', current: false };\n\n  views: View[] = [this.HomeView, this.FriendsView, this.ProfileView];\n\n  headerText: string;\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.HomeView.current = true;\n    this.headerText = this.HomeView.name;\n\n    // [routerLink]=\"['/home']\" [queryParams]=\"{view:'param'}\"\n    this.activatedRoute.queryParams.subscribe(params => {\n      const view = params['view'];\n\n      this.handleViewParam(view);\n    });\n  }\n\n  // Display home view\n  showHomeView() {\n    this.showPage(this.HomeView.id);\n  }\n\n  // Display friends view\n  showFriendsView() {\n    this.showPage(this.FriendsView.id);\n  }\n\n  // Display profile view\n  showProfileView() {\n    this.showPage(this.ProfileView.id);\n  }\n\n  // Display view by id\n  showPage(_id: number) {\n    this.hideAllViews();\n    switch (_id) {\n      case 2:\n        this.FriendsView.current = true;\n        this.headerText = this.FriendsView.name;\n        break;\n      case 3:\n        this.ProfileView.current = true;\n        this.headerText = this.ProfileView.name;\n        break;\n      default:\n        this.HomeView.current = true;\n        this.headerText = this.HomeView.name;\n        break;\n    }\n  }\n\n  // Hide all home views\n  hideAllViews() {\n    this.views.forEach(function(view) {\n      view.current = false;\n    });\n  }\n\n  // Display views based on url param\n  handleViewParam(param: string) {\n    switch (param) {\n      case 'profile':\n        this.showProfileView();\n        break;\n      case 'connections':\n        this.showFriendsView();\n        break;\n      default:\n        this.showHomeView();\n        break;\n    }\n  }\n}\n","module.exports = \"* {\\n    font-family: 'Poppins', sans-serif;\\n}\\n\\n::-webkit-input-placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n\\n:-ms-input-placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n\\n::-ms-input-placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n\\n::placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvT25ib2FyZGluZy9mb3Jnb3QvZm9yZ290LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsVUFBVTtFQUNaOztBQUhGO0lBQ0ksY0FBYztJQUNkLFVBQVU7RUFDWjs7QUFIRjtJQUNJLGNBQWM7SUFDZCxVQUFVO0VBQ1o7O0FBSEY7SUFDSSxjQUFjO0lBQ2QsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvT25ib2FyZGluZy9mb3Jnb3QvZm9yZ290LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xufVxuXG46OnBsYWNlaG9sZGVyIHsgXG4gICAgY29sb3I6ICM5NkI3Qzk7XG4gICAgb3BhY2l0eTogMTsgXG4gIH0iXX0= */\"","module.exports = \"<body>\\n  <!-- Main Container Div -->\\n  <section class=\\\"d-flex align-items-center\\\" style=\\\"margin-top: 40px; margin-bottom: 20px;\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-12 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4\\\">\\n            <div>\\n              <img src=\\\"/assets/images/forgot_circle-lock.png\\\" alt=\\\"Circle Lock\\\">\\n            </div>\\n            <div class=\\\"px-5\\\">\\n              <p class=\\\"text-secondary mt-5 text-strong\\\">Trouble logging in?</p>\\n              <p class=\\\"text-light\\\">Enter Your Email And We'll Send You A Link To Get Back Into Your Account.</p>\\n            </div>\\n            <form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"justify-content-center px-4 py-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailInput\\\"\\n                    aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                  <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback text-left\\\">\\n                    <div *ngIf=\\\"f.email.errors.required\\\">Please provide your email.</div>\\n                    <div *ngIf=\\\"f.email.errors.email || f.email.errors.pattern\\\">The email {{ f.email.value }} is invalid.</div>\\n                  </div>\\n\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block mt-3 py-3\\\" value=\\\"Send Email\\\">SEND LOGIN LINK</button>\\n                </div>\\n              </div>\\n            </form>\\n            <div>\\n              <p class=\\\"mb-4\\\">OR</p>\\n              <a [routerLink]=\\\"['/signup']\\\"><p class=\\\"text-primary\\\">CREATE NEW ACCOUNT</p></a>\\n            </div>\\n            <div class=\\\"mt-5\\\">\\n              <a [routerLink]=\\\"['/login']\\\"><p class=\\\"mt-5\\\" style=\\\"color: #115073; font-weight: bold;\\\"><i class=\\\"fas fa-long-arrow-left\\\"></i> <span class=\\\"pl-3\\\">BACK TO LOGIN</span></p></a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n    <app-footer></app-footer>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { AuthService } from '../../Core/_services/auth.service';\nimport { CustomFormValidation } from '../../Core/_models/form-validation';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css'],\n})\nexport class ForgotComponent implements OnInit {\n  forgotForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  appTitle = 'Forgot Password';\n  formValidation: CustomFormValidation = new CustomFormValidation();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.forgotForm = this.formBuilder.group({\n      email: ['', Validators.compose([ Validators.required, Validators.email, Validators.pattern(this.formValidation.regularEmailValidation)])]\n    });\n\n    this.returnUrl = '/';\n  }\n\n  // Convenience getter for easy access to form fields\n  get f() { return this.forgotForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.loading = true;\n\n    // http.post(`${environment.apiUrl}/recovery/forgot`);\n\n    // stop here if form is invalid\n    if (this.forgotForm.invalid) {\n      this.loading = false;\n      return;\n    }\n\n    // Create obj to hold formdata\n    const formData: FormData = new FormData();\n\n    // Append input to form data\n    formData.append('password', this.forgotForm.get('email').value);\n    \n    this.loading = false;\n  }\n\n}\n","module.exports = \"::-webkit-input-placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n:-ms-input-placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n::-ms-input-placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n::placeholder { \\n    color: #96B7C9;\\n    opacity: 1; \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvT25ib2FyZGluZy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLFVBQVU7RUFDWjtBQUhGO0lBQ0ksY0FBYztJQUNkLFVBQVU7RUFDWjtBQUhGO0lBQ0ksY0FBYztJQUNkLFVBQVU7RUFDWjtBQUhGO0lBQ0ksY0FBYztJQUNkLFVBQVU7RUFDWiIsImZpbGUiOiJzcmMvYXBwL09uYm9hcmRpbmcvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6cGxhY2Vob2xkZXIgeyBcbiAgICBjb2xvcjogIzk2QjdDOTtcbiAgICBvcGFjaXR5OiAxOyBcbiAgfSJdfQ== */\"","module.exports = \"<body>\\n    <div class=\\\"container my-4 pt-5 pb-3\\\">\\n        <!-- Title header -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12 col-lg-8 offset-lg-2 text-center\\\">\\n                <img src=\\\"/assets/images/logo-mark-64.png\\\" class=\\\"img-fluid img-responsive mx-auto mb-4\\\" width=\\\"64px\\\"\\n                    alt=\\\"Chatversity Logo Mark\\\">\\n                <h1 class=\\\"text-center h4 text-secondary\\\">Login to Chatversity</h1>\\n            </div>\\n        </div>\\n        <!-- Login Form -->\\n        <div class=\\\"row mt-5\\\">\\n            <div class=\\\"col-12 col-md-8 offset-md-2 col-lg-4 offset-lg-4\\\">\\n                <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\">\\n                        <div *ngIf=\\\"f.username.errors.invalid\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">Incorrect\\n                            username or password.</div>\\n                    </div>\\n\\n                    <!-- Username -->\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\" class=\\\"text-secondary\\\">Username</label>\\n                        <input type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter your username\\\"\\n                            class=\\\"form-control\\\" tabindex=1 [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.username.errors.required\\\">Username is required.</div>\\n                            <div *ngIf=\\\"f.username.errors.email || f.username.errors.pattern\\\">The username {{ f.username.value }} is invalid.</div>\\n                        </div>\\n                    </div>\\n\\n                    <!-- Password -->\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-6\\\">\\n                                <label for=\\\"password\\\" class=\\\"text-secondary\\\">Password</label>\\n                            </div>\\n                            <div class=\\\"col-6 text-right\\\">\\n                                <a [routerLink]=\\\"['/forgot']\\\" class=\\\"small\\\"tabindex=7>Forgot Password?</a>\\n                            </div>\\n                        </div>\\n                        <input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Enter your password\\\"\\n                            class=\\\"form-control\\\" tabindex=2 [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.password.errors.required\\\">Password is required.</div>\\n                        </div>\\n                        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-login btn-primary btn-block mt-4 py-3\\\" tabindex=3><span *ngIf=\\\"!loading\\\">LOGIN</span>\\n                            <div *ngIf=\\\"loading\\\" class=\\\"spinner-border text-whiet\\\" role=\\\"status\\\">\\n                                <span class=\\\"sr-only\\\">Loading...</span>\\n                            </div>\\n                        </button>\\n                        \\n                    </div>\\n                </form>\\n            </div>\\n            <!-- Signup link -->\\n            <div class=\\\"col-12\\\">\\n                <p class=\\\"text-center text-secondary\\\">New to Chatversity? &nbsp; <a [routerLink]=\\\"['/signup']\\\" tabindex=4>Sign up</a></p>\\n            </div>\\n        </div>\\n        <!-- Google Play and Apple Store Badges -->\\n        <div class=\\\"col-8 offset-2 mt-3\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6 col-lg-3 offset-lg-3\\\">\\n                    <a href=\\\"#\\\"tabindex=5>\\n                        <img src=\\\"/assets/images/GooglePlayBadge.png\\\" class=\\\"img-fluid img-responsive mx-auto\\\"\\n                            style=\\\"min-width: 75px; min-height: 30px;\\\">\\n                    </a>\\n                </div>\\n                <div class=\\\"col-6 col-lg-3\\\"tabindex=6>\\n                    <a href=\\\"#\\\">\\n                        <img src=\\\"/assets/images/AppStoreBadge.png\\\" class=\\\"img-fluid img-responsive mx-auto\\\"\\n                            style=\\\"min-width: 75px; min-height: 30px;\\\">\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <footer>\\n        <!-- import footer -->\\n        <app-footer></app-footer>\\n    </footer>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {AuthService} from '../../Core/_services/auth.service';\nimport { CustomFormValidation } from '../../Core/_models/form-validation';\nimport { MessagingService } from '../../Core/_services/messaging.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl = 'home';\n  formValidation: CustomFormValidation = new CustomFormValidation();\n\n  constructor (\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private messageService: MessagingService) {}\n\n  ngOnInit() {\n    // TODO: Check if already logged in, redirect\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.compose([\n        Validators.required,\n        Validators.email,\n        Validators.pattern(this.formValidation.regularEmailValidation)]\n      )],\n      password: ['', Validators.required]\n  });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  //\n  // ─── HANDLE LOGIN FORM ──────────────────────────────────────────────────────────\n  //\n    onSubmit() {\n\n      this.submitted = true;\n      this.loading = true;\n\n      // Stop here if form is invalid\n      if (this.loginForm.invalid) {\n        this.loading = false;\n        return;\n      }\n\n      // Create obj to hold formdata\n      const formData: FormData = new FormData();\n\n      // Append username and password to form data\n      formData.append('username', this.loginForm.get('username').value);\n      formData.append('password', this.loginForm.get('password').value);\n\n      this.authService.login(this.f.username.value, this.f.password.value).then(oktaUser => {\n\n        console.log(`Logged in as ${oktaUser._embedded.user.profile.firstName}`);\n        console.log('Connecting to ChatKit...');\n\n        /*******************/\n        /* Begin App setup */\n        /*******************/\n\n        // Initialize Chatkit\n        this.messageService.initChatkit(oktaUser._embedded.user.id)\n          .then(chatkitUser => {\n\n            this.authService.currentUser = chatkitUser;\n            console.log(this.authService.currentUser);\n\n            this.router.navigate([this.returnUrl]);\n\n        });\n\n      },\n      error => {\n        console.log('LOGIN ERROR:', error);\n        this.loading = false;\n        this.f.username.setErrors({invalid: true});\n      });\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n}\n","module.exports = \".styled-btn{\\n    height: 50px;\\n    width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvT25ib2FyZGluZy9uZXctdXNlci9uZXctdXNlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9PbmJvYXJkaW5nL25ldy11c2VyL25ldy11c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3R5bGVkLWJ0bntcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgd2lkdGg6IDE1MHB4O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container w-100 h-100\\\" style=\\\"background-color: white;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 text-center mt-5\\\">\\n        <div class=\\\"mt-5\\\">\\n            <p class=\\\"h1 text-secondary my-5 text-strong\\\">Thank you for signing up with <span class=\\\"text-primary\\\">Chatversity</span> \\n              <img src=\\\"/assets/images/logo-mark-64.png\\\" class=\\\"img-fluid img-responsive mx-auto mb-3\\\" width=\\\"64px\\\" style=\\\"padding-left:10px;\\\"\\n              alt=\\\"Chatversity Logo Mark\\\">\\n            </p>\\n\\n            <div style=\\\"margin-top: 10%;\\\">\\n                <p class=\\\"text-light\\\" style=\\\"font-size:1.2em;\\\">\\n                  Would you like to set up your profile now?\\n                </p>\\n                <div class=\\\"mt-5\\\">\\n                  <a [routerLink]=\\\"['/settings']\\\" [queryParams]=\\\"{view:'profile'}\\\"><button class=\\\"btn btn-primary mt-2 styled-btn\\\">Yes</button></a> &nbsp;\\n                  <a [routerLink]=\\\"['/home']\\\"><button class=\\\"btn btn-outline-primary mt-2 styled-btn\\\">No</button></a>\\n                </div>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".signup-pic{\\n  background: url('signup-pic-100.png'); \\n  background-size: cover;\\n  height: 100vh;\\n  background-repeat: no-repeat;\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n.col-override{\\n  padding: 0;\\n  max-width: 100%;\\n}\\n.signup-text{\\n  padding-left: 0%;\\n  padding-top: 50%;\\n  text-align: center;\\n}\\n.pic-title{\\n  font-size: 2.5rem;\\n  margin-bottom: 15px;\\n}\\n.pic-msg{\\n  display: none;\\n}\\n.pic-msg-mobile{\\n  display: block;\\n}\\n.signup-btn{\\n  display: inline-block;\\n}\\n.offset-override{\\n  max-width: 500px;\\n  margin-right: 0%;\\n  margin-left: 0%;\\n  margin: 0 auto;\\n}\\n.primary-border{\\n  border: 1px solid rgba(38, 177, 255, .35);\\n}\\n.danger-border{\\n  border: 1px solid #ff4136;\\n}\\n::-webkit-input-placeholder { \\n  color: #96B7C9;\\n  opacity: 1; \\n}\\n:-ms-input-placeholder { \\n  color: #96B7C9;\\n  opacity: 1; \\n}\\n::-ms-input-placeholder { \\n  color: #96B7C9;\\n  opacity: 1; \\n}\\n::placeholder { \\n  color: #96B7C9;\\n  opacity: 1; \\n}\\ninput[readonly] {\\n  background-color: white;\\n}\\n@media (min-width: 576px){ /*Small*/\\n  .signup-text{\\n    padding-top: 30%;\\n  }\\n}\\n@media (min-width: 768px){ /*Medium*/\\n  .col-override{\\n    max-width: 570px;\\n  }\\n  .signup-text{\\n    padding-left: 10%;\\n    padding-top: 70%;\\n    text-align: left;\\n  }\\n  .signup-btn{\\n    display: none;\\n  }\\n  .pic-title{\\n    font-size: 1.5rem;\\n    margin-bottom: 5px;\\n  }\\n  .pic-msg{\\n    display: block;\\n  }\\n  .pic-msg-mobile{\\n    display: none;\\n  }\\n  .offset-override{\\n    margin-right: 3%;\\n    margin-left: 3%;\\n  }\\n  .mobile-fixed{\\n    position: relative;\\n  }\\n}\\n@media (min-width: 992px){ /*Large*/\\n  .offset-override{\\n    margin-right: 8%;\\n    margin-left: 8%;\\n  }\\n}\\n@media (min-width: 1200px){ /*Extra-Large*/\\n  .offset-override{\\n    margin-right: 10%;\\n    margin-left: 10%;\\n    margin: 0 auto;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvT25ib2FyZGluZy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQ0FBNEQ7RUFDNUQsc0JBQXNCO0VBQ3RCLGFBQWE7RUFDYiw0QkFBNEI7RUFDNUIsd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0FBQ1I7QUFDQTtFQUNFLFVBQVU7RUFDVixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGNBQWM7QUFDaEI7QUFFQTtFQUNFLHlDQUF5QztBQUMzQztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRSxjQUFjO0VBQ2QsVUFBVTtBQUNaO0FBSEE7RUFDRSxjQUFjO0VBQ2QsVUFBVTtBQUNaO0FBSEE7RUFDRSxjQUFjO0VBQ2QsVUFBVTtBQUNaO0FBSEE7RUFDRSxjQUFjO0VBQ2QsVUFBVTtBQUNaO0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7QUFFQSwyQkFBMkIsUUFBUTtFQUNqQztJQUNFLGdCQUFnQjtFQUNsQjtBQUNGO0FBRUEsMkJBQTJCLFNBQVM7RUFDbEM7SUFDRSxnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxhQUFhO0VBQ2Y7RUFDQTtJQUNFLGlCQUFpQjtJQUNqQixrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLGNBQWM7RUFDaEI7RUFDQTtJQUNFLGFBQWE7RUFDZjtFQUNBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGVBQWU7RUFDakI7RUFDQTtJQUNFLGtCQUFrQjtFQUNwQjtBQUNGO0FBRUEsMkJBQTJCLFFBQVE7RUFDakM7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjtBQUNGO0FBRUEsNEJBQTRCLGNBQWM7RUFDeEM7SUFDRSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGNBQWM7RUFDaEI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL09uYm9hcmRpbmcvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZ251cC1waWN7XG4gIGJhY2tncm91bmQ6IHVybCgnLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9zaWdudXAtcGljLTEwMC5wbmcnKTsgXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbn1cbi5jb2wtb3ZlcnJpZGV7XG4gIHBhZGRpbmc6IDA7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi5zaWdudXAtdGV4dHtcbiAgcGFkZGluZy1sZWZ0OiAwJTtcbiAgcGFkZGluZy10b3A6IDUwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnBpYy10aXRsZXtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG4ucGljLW1zZ3tcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5waWMtbXNnLW1vYmlsZXtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uc2lnbnVwLWJ0bntcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4ub2Zmc2V0LW92ZXJyaWRle1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDAlO1xuICBtYXJnaW4tbGVmdDogMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ucHJpbWFyeS1ib3JkZXJ7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMzgsIDE3NywgMjU1LCAuMzUpO1xufVxuXG4uZGFuZ2VyLWJvcmRlcntcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmNDEzNjtcbn1cblxuOjpwbGFjZWhvbGRlciB7IFxuICBjb2xvcjogIzk2QjdDOTtcbiAgb3BhY2l0eTogMTsgXG59XG5cbmlucHV0W3JlYWRvbmx5XSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpeyAvKlNtYWxsKi9cbiAgLnNpZ251cC10ZXh0e1xuICAgIHBhZGRpbmctdG9wOiAzMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXsgLypNZWRpdW0qL1xuICAuY29sLW92ZXJyaWRle1xuICAgIG1heC13aWR0aDogNTcwcHg7XG4gIH1cbiAgLnNpZ251cC10ZXh0e1xuICAgIHBhZGRpbmctbGVmdDogMTAlO1xuICAgIHBhZGRpbmctdG9wOiA3MCU7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuICAuc2lnbnVwLWJ0bntcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5waWMtdGl0bGV7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICB9XG4gIC5waWMtbXNne1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5waWMtbXNnLW1vYmlsZXtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5vZmZzZXQtb3ZlcnJpZGV7XG4gICAgbWFyZ2luLXJpZ2h0OiAzJTtcbiAgICBtYXJnaW4tbGVmdDogMyU7XG4gIH1cbiAgLm1vYmlsZS1maXhlZHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsgLypMYXJnZSovXG4gIC5vZmZzZXQtb3ZlcnJpZGV7XG4gICAgbWFyZ2luLXJpZ2h0OiA4JTtcbiAgICBtYXJnaW4tbGVmdDogOCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCl7IC8qRXh0cmEtTGFyZ2UqL1xuICAub2Zmc2V0LW92ZXJyaWRle1xuICAgIG1hcmdpbi1yaWdodDogMTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn0iXX0= */\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n\\n<head>\\n  <link href=\\\"https://fonts.googleapis.com/css?family=Nunito|Poppins|Roboto\\\" rel=\\\"stylesheet\\\">\\n</head>\\n\\n<body>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <!--Sign Up Picture-->\\n      <div class=\\\"col col-12 col-md col-lg col-override\\\" style=\\\"min-height: 100vh;\\\">\\n        <div class=\\\"signup-pic\\\">\\n          <div class=\\\"signup-text\\\">\\n            <h4 class=\\\"text-white text-strong pb-2 pic-title\\\">Chatversity</h4>\\n            <h5 class=\\\"text-secondary text-strong pic-msg-mobile\\\">Simplifying Communication</h5>\\n            <h1 class=\\\"text-secondary text-strong pic-msg\\\">Simplifying <br/> Communication.</h1>\\n\\n            <div class=\\\"mt-5 signup-btn\\\">\\n                <button id=\\\"signup-button\\\" class=\\\"btn btn-secondary mt-5 px-4 py-3\\\"\\n                onclick=\\\"document.getElementById('signup-top').scrollIntoView();\\\">Sign Up Today!</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div> \\n\\n      <!--Sign Up Form-->\\n      <div class=\\\"col col-12 col-md col-lg offset-override\\\" style=\\\"min-height: 100vh;\\\">\\n        <div class=\\\"w-100 mx-auto text-center mb-5 mt-4\\\">\\n          <img src=\\\"../../../../assets/images/Logo-Name.png\\\" class=\\\"img-fluid img-responsive mx-auto w-75\\\" id=\\\"signup-top\\\"/>\\n        </div>\\n        <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <!--Summary Error Alert-->\\n          <div *ngIf=\\\"submitted && checkForFormErrors()\\\">\\n              <!--<div *ngIf=\\\"f.username.errors.invalid\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">The username {{ f.username.value }} is invalid.</div>\\n              <div *ngIf=\\\"f.password.errors.invalid\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">Your password is too weak.</div>-->\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12 col-sm-6 col-md-6\\\">\\n  \\n              <!--First Name-->\\n              <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"firstname\\\" class=\\\"text-secondary\\\">First Name <span class=\\\"text-danger\\\">*</span></label>\\n                <input type=\\\"text\\\" required class=\\\"form-control primary-border\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" placeholder=\\\"John\\\" \\n                formControlName=\\\"firstname\\\" maxlength=\\\"30\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.firstname.errors, 'danger-border': submitted && f.firstname.errors }\\\">\\n\\n                <div *ngIf=\\\"submitted && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.firstname.errors.required\\\">Please provide your first name.</div>\\n                </div>\\n                </div>\\n              </div>\\n  \\n              <!--Last Name-->\\n              <div class=\\\"col-12 col-sm-6 col-md-6\\\">\\n                <div class=\\\"form-group mb-3\\\">\\n                  <label for=\\\"lastname\\\" class=\\\"text-secondary\\\">Last Name <span class=\\\"text-danger\\\">*</span></label>\\n                  <input type=\\\"text\\\" required class=\\\"form-control primary-border\\\" id=\\\"lastname\\\" name=\\\"lastname\\\" placeholder=\\\"Doe\\\" \\n                  formControlName=\\\"lastname\\\" maxlength=\\\"30\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.lastname.errors, 'danger-border': submitted && f.lastname.errors }\\\">\\n\\n                <div *ngIf=\\\"submitted && f.lastname.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.lastname.errors.required\\\">Please provide your last name.</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n            <!--Username (Email) Textbox-->\\n            <div class=\\\"form-group mb-3\\\">\\n                <label for=\\\"username\\\" class=\\\"text-secondary\\\">Email <span class=\\\"text-danger\\\">*</span></label>\\n                <input type=\\\"email\\\" required name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"you@university.edu\\\" \\n                    class=\\\"form-control primary-border\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors, 'danger-border': submitted && f.username.errors }\\\"\\n                    (change)=\\\"getUniversity(f.username.value)\\\" />\\n                  <div class=\\\"text-primary\\\" *ngIf=\\\"!submitted || !f.username.errors\\\">\\n                    <small><span class=\\\"text-danger\\\">*</span> PLEASE ENTER YOUR SCHOOL EMAIL</small>\\n                  </div>\\n                    <!-- TODO: Add search university filter here -->\\n                  \\n                <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.username.errors.required\\\">Please provide your school email.</div>\\n                    <div *ngIf=\\\"f.username.errors.email || f.username.errors.pattern\\\">The username {{ f.username.value }} is invalid.</div>\\n                </div>\\n            </div>\\n\\n            <!--University Select-->\\n            <div class=\\\"form-group mb-3\\\">\\n              <label for=\\\"university\\\" class=\\\"text-secondary\\\">University <span class=\\\"text-danger\\\">*</span></label>\\n              <input type=\\\"text\\\" [readonly]=\\\"true\\\" name=\\\"university\\\" required formControlName=\\\"university\\\" class=\\\"form-control primary-border\\\"\\n                  placeholder=\\\"University of Michigan\\\" (change)=\\\"userUpdateUniversity(f.university.value)\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.university.errors, 'danger-border': submitted && f.university.errors }\\\">\\n\\n              <div *ngIf=\\\"submitted && f.university.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.university.errors.required\\\">Please provide your university.</div>\\n                  <div *ngIf=\\\"f.university.errors.invalid\\\">Invalid university.</div>\\n              </div>\\n          </div>\\n\\n            <!--Password-->\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\" class=\\\"text-secondary\\\">Password <span class=\\\"text-danger\\\">*</span></label>\\n                <input type=\\\"password\\\" required formControlName=\\\"password\\\" placeholder=\\\"Create a password\\\"\\n                    class=\\\"form-control primary-border\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors, 'danger-border': submitted && f.password.errors }\\\" />\\n                \\n                <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.password.errors.required\\\">Please choose a password.</div>\\n                    <div *ngIf=\\\"f.password.errors.minlength || f.password.errors.pattern\\\">Your password must have atleast: <br>\\n                      <div style=\\\"padding-left:20px\\\">▶&nbsp; 8 characters <br> ▶&nbsp; 1 uppercase letter <br> ▶&nbsp; 1 number</div>\\n                    </div>\\n                </div>\\n\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-login btn-primary btn-block mt-4 py-3\\\"><span *ngIf=\\\"!loading\\\">SIGN UP FOR CHATVERSITY</span>\\n                  <div *ngIf=\\\"loading\\\" class=\\\"spinner-border text-whiet\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                  </div>\\n                </button>\\n\\n            </div>\\n\\n            <div class=\\\"text-secondary text-center my-4\\\">\\n                Already have an account? &nbsp; <a [routerLink]=\\\"['/login']\\\" class=\\\"text-primary\\\">Login</a>\\n            </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { AuthService } from '../../Core/_services/auth.service';\nimport { first } from 'rxjs/operators';\nimport { University } from '../../Core/_models/university';\nimport { CustomFormValidation } from '../../Core/_models/form-validation';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  universities: University[];\n  searchingForSchool = false;\n  wrongUniversity = false;\n  formValidation: CustomFormValidation = new CustomFormValidation();\n  guessUniversity: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService,\n    private http: HttpClient) { }\n\n  ngOnInit() {\n\n    this.signupForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      university: [this.guessUniversity, Validators.required],\n      username: ['', Validators.compose([\n        Validators.required, Validators.email, Validators.pattern(this.formValidation.eduEmailValidation)\n      ])],\n      password: ['', Validators.compose([\n        Validators.required, Validators.minLength(8), Validators.pattern(this.formValidation.passwordValidation)\n      ])]\n    });\n\n    this.returnUrl = '/new-user';\n  }\n\n  //\n  // ─── CHECK FOR USERNAME OR PASSWORD ERRORS ──────────────────────────────────────\n  //\n  checkForFormErrors() {\n    if (this.f.username.errors || this.f.password.errors) {\n      return true;\n    }\n    return false;\n  }\n\n  //\n  // ─── CONVENIENCE GETTER FOR EASY ACCESS TO FORM FIELDS ──────────────────────────\n  //\n  get f() { return this.signupForm.controls; }\n\n  //\n  // ─── VALIDATE UNIVERSITY WITH JSON STORE ──────────────────────────────────────\n  //\n  validateUniversity(query: string) {\n    this.searchingForSchool = true;\n    return this.http.get(`${environment.apiUrl}/university/name/${query}`)\n    .toPromise()\n    .then(university => {\n      return university;\n    })\n    .catch(error => {\n      this.searchingForSchool = false;\n      return null;\n    });\n  }\n\n  //\n  // ─── SEARCH FOR UNIVERSITY FROM JSON STORE ──────────────────────────────────────\n  //\n  findUniversity(query: string) {\n    this.searchingForSchool = true;\n    return this.http.get(`${environment.apiUrl}/university/${query}`)\n    .toPromise()\n    .then(university => {\n      return university;\n    })\n    .catch(error => {\n      this.searchingForSchool = false;\n      return null;\n    });\n  }\n\n  //\n  // ─── GET UNIVERSITY BY DOMAIN ──────────────────────────────────────\n  //\n  async getUniversity(query: string) {\n    let data = new Object();\n    data = await this.findUniversity(query);\n\n    if (data) {\n      this.guessUniversity = data['name'];\n      this.signupForm.get('university').setValue(this.guessUniversity);\n    }\n  }\n\n  //\n  // ─── UPDATE UNIVERSITY IF USER CHANGES INPUT ──────────────────────────────────────\n  //\n  userUpdateUniversity(newUniversity: string) {\n    this.guessUniversity = newUniversity;\n\n    this.validateUniversity(this.guessUniversity)\n    .then(result => {\n      if (!result) {\n        this.f.university.setErrors({'invalid': true});\n      }\n    });\n  }\n\n  //\n  // ─── HANDLE SIGN UP ─────────────────────────────────────────────────────────────\n  //\n  onSubmit() {\n    this.submitted = true;\n    this.loading = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      this.loading = false;\n      return;\n    }\n\n    // Create obj to hold formdata\n    const formData: FormData = new FormData();\n\n    // Append input to form data\n    formData.append('firstname', this.signupForm.get('firstname').value);\n    formData.append('lastname', this.signupForm.get('lastname').value);\n    formData.append('university', this.guessUniversity);\n    formData.append('username', this.signupForm.get('username').value);\n    formData.append('password', this.signupForm.get('password').value);\n\n    this.auth.signup(this.f.firstname.value, this.f.lastname.value, this.guessUniversity, this.f.username.value, this.f.password.value)\n    .then(data => {\n      this.router.navigate([this.returnUrl]);\n    },\n    error => {\n      console.log('SIGN UP ERROR:', error);\n      this.loading = false;\n    });\n  }\n}\n","module.exports = \"#user-image{\\n    max-width: 200px;\\n    max-height: 200px;\\n    border: 1px solid #0E425F;\\n}\\n#profile-picture-container > img{\\n    margin: left;\\n}\\n#profile-content{\\n    margin-top: 20px;\\n}\\n@media (min-width: 992px){ /*Large*/\\n    #profile-content{\\n        margin-top: 0px;\\n    }\\n    #profile-picture-container > img{\\n        margin: 0 auto;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUHJvZmlsZS1WaWV3cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQSwyQkFBMkIsUUFBUTtJQUMvQjtRQUNJLGVBQWU7SUFDbkI7SUFDQTtRQUNJLGNBQWM7SUFDbEI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL1Byb2ZpbGUtVmlld3MvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjdXNlci1pbWFnZXtcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwRTQyNUY7XG59XG4jcHJvZmlsZS1waWN0dXJlLWNvbnRhaW5lciA+IGltZ3tcbiAgICBtYXJnaW46IGxlZnQ7XG59XG4jcHJvZmlsZS1jb250ZW50e1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpeyAvKkxhcmdlKi9cbiAgICAjcHJvZmlsZS1jb250ZW50e1xuICAgICAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgfVxuICAgICNwcm9maWxlLXBpY3R1cmUtY29udGFpbmVyID4gaW1ne1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG59Il19 */\"","module.exports = \"<div class=\\\"container-fluid py-3\\\">\\n    <div class=\\\"text-center\\\">\\n        <div class=\\\"row mt-5 mb-3\\\">\\n            <div class=\\\"col-12 col-lg-4 mt-1 pr-2\\\" id=\\\"profile-picture-container\\\">\\n                <!-- Profile Image -->\\n                <img src=\\\"\\\" onerror=\\\"this.src='../../../assets/images/DefaultProfile.png'\\\" id=\\\"user-image\\\"\\n                class=\\\"rounded img-fluid mb-1 d-block\\\" >\\n            </div>\\n\\n            <div class=\\\"col-12 col-lg-7 text-left\\\" id=\\\"profile-content\\\">\\n                <ng-container *ngIf=\\\"this.chatkitUser\\\">\\n                    <!-- User Name -->\\n                    <div class=\\\"h2 text-secondary text-light-weight\\\">{{ this.name }}</div>\\n                    <!-- {{ this.user.avatarURL }} -->\\n                    <!-- <ng-container *ngIf=\\\"this.user.presence.state\\\">\\n                        User is online!\\n                    </ng-container> -->\\n\\n                    <!-- User Major and Graduation Year -->\\n                    <div>\\n                        <span class=\\\"text-primary text-uppercase\\\" style=\\\"font-weight:100;\\\">{{ this.major }} &nbsp;|&nbsp; Class of {{ this.graduationYear }}</span><br>\\n                    </div>\\n    \\n                    <!--User Bio-->\\n                    <div class=\\\"text-left mt-3\\\">\\n                        <p>{{this.bio}}</p> \\n                    </div>\\n    \\n                    <!--User Clubs-->\\n                    <div class=\\\"text-left\\\">\\n                        <p><span class=\\\"text-secondary-light\\\">Clubs: &nbsp;</span> {{ this.clubs }}</p>\\n                    </div>\\n    \\n                    <!--User Interests-->\\n                    <div class=\\\"text-left\\\">\\n                        <p><span class=\\\"text-secondary-light\\\">Interests: &nbsp;</span> {{ this.interests }}</p>\\n                    </div>\\n                </ng-container>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormControl, MaxLengthValidator } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../Core/_services/auth.service';\nimport { MessagingService } from '../../Core/_services/messaging.service';\nimport { environment } from '../../../environments/environment.prod';\nimport { UserService } from '../../Core/_services/user.service';\nimport { AppComponent } from '../../app.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n  currentUser: any;\n  connections: any;\n  subscription: any;\n\n  name = '';\n  bio = '';\n  major = '';\n  graduationYear = '';\n  interests = '';\n  clubs = '';\n\n  constructor( private authService: AuthService ) {\n\n    this.subscription = this.authService.currentUser.subscribe(\n      (user) => {\n        this.currentUser = user;\n        console.log('CHATKIT USER:', this.currentUser);\n        this.initForm();\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  initForm() {\n    try {\n      this.name = this.currentUser.name;\n    } catch (error) {\n      this.name = '';\n    }\n\n    try {\n      this.bio = this.currentUser.customData.bio;\n    } catch (error) {\n      this.bio = '';\n    }\n\n    try {\n      this.major = this.currentUser.customData.major;\n    } catch (error) {\n      this.major = '';\n    }\n\n    try {\n      this.graduationYear = this.currentUser.customData.graduationYear;\n    } catch (error) {\n      this.graduationYear = '';\n    }\n\n    try {\n      this.interests = this.currentUser.customData.interests;\n    } catch (error) {\n      this.interests = '';\n    }\n\n    try {\n      this.clubs = this.currentUser.customData.clubs;\n    } catch (error) {\n      this.clubs = '';\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n\\n      <!-- edit buttons -->\\n      <div class=\\\"col-12 mt-4 mb-3\\\">\\n\\n        <!-- Button to show edit form -->\\n        <button (click)=\\\"(editingForm == true ? onSubmit() : (editingForm = !editingForm))\\\" [ngClass]=\\\"{'btn-primary': editingForm, 'btn-outline-primary': !editingForm}\\\" class=\\\"btn px-3\\\">\\n          <i class=\\\"fa fa-edit\\\" *ngIf=\\\"!editingForm\\\"></i> {{ editingForm == true ? 'Save Changes' : 'Edit Profile' }}\\n        </button>\\n  \\n        <!-- Button to cancel form edit => only shown when form is displayed -->\\n        <button (click)=\\\"editingForm = !editingForm\\\" *ngIf=\\\"editingForm\\\" class=\\\"btn btn-outline-primary ml-2 px-3\\\">\\n          <i class=\\\"fa fa-times\\\"></i> Cancel\\n        </button>\\n\\n      </div>\\n      <!-- end edit buttons -->\\n\\n      <div class=\\\"col-12 col-sm-12 col-lg-8 my-3\\\">\\n        <ng-container *ngIf=\\\"currentUser\\\">\\n          <!-- BEGIN FORM -->\\n          <form *ngIf=\\\"editingForm\\\" id=\\\"profileEditForm\\\" [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  \\n            <div *ngIf=\\\"submitted && f.name.errors\\\">\\n              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">Unable to update profile.</div>\\n            </div>\\n            \\n          <!--Name-->\\n          <div class=\\\"form-group mb-3\\\">\\n              <label for=\\\"name\\\" class=\\\"text-secondary\\\">Name \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"editMode\\\">*</span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"John Doe\\\" required\\n              formControlName=\\\"name\\\" maxlength=\\\"60\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n  \\n              <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.name.errors.required\\\">Please provide your name.</div>\\n              </div>\\n            </div>\\n       \\n            <!--Bio-->\\n            <div class=\\\"form-group mb-3\\\">\\n              <label for=\\\"bio\\\" class=\\\"text-secondary\\\">Bio</label>\\n              <textarea class=\\\"form-control\\\" id=\\\"bio\\\" name=\\\"bio\\\" maxlength=\\\"200\\\" formControlName=\\\"bio\\\" data-gramm_editor=\\\"false\\\"></textarea>\\n            </div>\\n  \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-lg-8\\\">\\n  \\n                <!--Major-->\\n                <div class=\\\"form-group mb-3\\\">\\n                  <label for=\\\"major\\\" class=\\\"text-secondary\\\">Major</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"major\\\" name=\\\"major\\\" placeholder=\\\"Computer Science\\\" maxlength=\\\"100\\\"\\n                  formControlName=\\\"major\\\">\\n                </div>\\n              </div>\\n  \\n              <!--Graduation Year-->\\n              <div class=\\\"col-12 col-lg-4\\\">\\n                <div class=\\\"form-group mb-3\\\">\\n                  <label for=\\\"graduationYear\\\" class=\\\"text-secondary\\\">Graduation Year</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"graduationYear\\\" name=\\\"graduationYear\\\" placeholder=\\\"2025\\\"\\n                  formControlName=\\\"graduationYear\\\">\\n              </div>\\n            </div>\\n          </div>\\n  \\n            <!--Interests-->\\n            <div class=\\\"form-group mb-3\\\">\\n              <label for=\\\"major\\\" class=\\\"text-secondary\\\">Interests</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"interests\\\" name=\\\"interests\\\" placeholder=\\\"What are your interests?\\\" maxlength=\\\"100\\\"\\n              formControlName=\\\"interests\\\">\\n            </div>\\n  \\n            <!--Clubs-->\\n            <div class=\\\"form-group mb-3\\\">\\n              <label for=\\\"clubs\\\" class=\\\"text-secondary\\\">Clubs</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"clubs\\\" name=\\\"clubs\\\" placeholder=\\\"Which clubs are you involved in?\\\" maxlength=\\\"100\\\"\\n              formControlName=\\\"clubs\\\">\\n            </div>\\n\\n          </form>\\n\\n          <!-- BEGIN PROFILE DISPLAY -->\\n          <div *ngIf=\\\"!editingForm\\\">\\n\\n            <!-- Profile Picture -->\\n            <figure>\\n              <img src=\\\"{{ currentUser.avatarURL }}\\\" alt=\\\"User Profile Picture\\\">\\n              <input type=\\\"file\\\" name=\\\"filepond\\\" data-max-files=\\\"10\\\" required>\\n              <!-- <file-pond #myPond \\n                [options]=\\\"pondOptions\\\" \\n                [files]=\\\"pondFiles\\\"\\n                (oninit)=\\\"pondHandleInit()\\\"\\n                (onaddfile)=\\\"pondHandleAddFile($event)\\\">\\n              </file-pond> -->\\n            </figure>\\n\\n            <!--Name-->\\n            <div class=\\\"mb-3\\\">\\n              <span class=\\\"no-edit-label text-uppercase\\\">Name</span> <br>\\n              <span *ngIf=\\\"currentUser\\\">{{ currentUser.name }}</span>\\n            </div>\\n      \\n            <!--Bio-->\\n            <div class=\\\"mb-3\\\">\\n              <span class=\\\"no-edit-label text-uppercase\\\">Bio</span> <br>\\n              <span> {{ currentUser.customData.bio }}</span>\\n            </div>\\n            \\n            <!--Major-->\\n            <div class=\\\"mb-3\\\">\\n              <span class=\\\"no-edit-label text-uppercase\\\">Major</span> <br>\\n              <span> {{ currentUser.customData.major }}</span>\\n            </div>\\n\\n            <!--Graduation Year-->\\n            <div class=\\\"mb-3\\\">\\n              <span class=\\\"no-edit-label text-uppercase\\\">Graduation Year</span> <br>\\n              <span> {{ currentUser.customData.graduationYear }}</span>\\n            </div>\\n\\n            <!--Interests-->\\n            <div class=\\\"mb-3\\\">\\n              <span class=\\\"no-edit-label text-uppercase\\\">Interests</span> <br>\\n              <span> {{ currentUser.customData.interests }}</span>\\n            </div>\\n\\n            <!--Clubs-->\\n            <div class=\\\"mb-3\\\">\\n              <span class=\\\"no-edit-label text-uppercase\\\">Clubs</span> <br>\\n              <span> {{ this.currentUser.customData.clubs }}</span>\\n            </div>\\n\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n</div>\\n\"","module.exports = \"input[disabled], textarea[disabled] {\\n  background-color: #F1F8FC;\\n  border: none;\\n  border: 1px solid #DAE6ED;\\n  resize: none; }\\n\\n.no-edit-label {\\n  color: #186fa0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Db25ub3IvQ2hhdHZlcnNpdHlfQXBwL3NyYy9hcHAvUHJvZmlsZS1WaWV3cy9zZXR0aW5ncy1wcm9maWxlL3NldHRpbmdzLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLHlCQUF3QjtFQUN4QixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvUHJvZmlsZS1WaWV3cy9zZXR0aW5ncy1wcm9maWxlL3NldHRpbmdzLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dFtkaXNhYmxlZF0sIHRleHRhcmVhW2Rpc2FibGVkXSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YxRjhGQztcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyOjFweCBzb2xpZCAjREFFNkVEO1xuICAgIHJlc2l6ZTogbm9uZTtcbn1cblxuLm5vLWVkaXQtbGFiZWx7XG4gICAgY29sb3I6ICMxODZmYTA7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormControl, MaxLengthValidator } from '@angular/forms';\nimport { AuthService } from '../../Core/_services/auth.service';\nimport { UserService } from '../../Core/_services/user.service';\nimport { FilePondModule } from 'filepond';\n\n@Component({\n  selector: 'app-settings-profile',\n  templateUrl: './settings-profile.component.html',\n  styleUrls: ['./settings-profile.component.scss']\n})\nexport class SettingsProfileComponent implements OnInit {\n  loading = false;\n  submitted = false;\n  editingForm = false;\n\n  profileForm: FormGroup;\n  user: any;\n  subscription: any;\n  currentUser: any;\n\n  name = '';\n  bio = '';\n  major = '';\n  graduationYear = '';\n  interests = '';\n  clubs = '';\n\n  @ViewChild('myPond') myPond: any;\n\n  pondOptions = {\n    class: 'my-filepond',\n    multiple: true,\n    labelIdle: 'Drop files here',\n    acceptedFileTypes: 'image/jpeg, image/png'\n  };\n\n  pondFiles = [\n    'index.html'\n  ];\n\n  pondHandleInit() {\n    console.log('FilePond has initialised', this.myPond);\n  }\n\n  pondHandleAddFile(event: any) {\n    console.log('A file was added', event);\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private userService: UserService) {}\n\n  // Convenience getter for easy access to form fields\n  get f() { return this.profileForm.controls; }\n\n  // Validation and other actions upon form submission\n  onSubmit() {\n    this.submitted = true;\n    this.loading = true;\n\n    // Stop here if form is invalid\n    if (this.profileForm.invalid) {\n      this.loading = false;\n      console.log('ERROR: Form invalid');\n      return;\n    }\n\n    // Get updated profile data from user\n    const _name: string = this.profileForm.get('name').value;\n    const _bio: string = this.profileForm.get('bio').value;\n    const _major: string = this.profileForm.get('major').value;\n    const _gradYr: number = this.profileForm.get('graduationYear').value;\n    const _interests: string = this.profileForm.get('interests').value;\n    const _clubs: string = this.profileForm.get('clubs').value;\n\n    // Get current user custom data\n    const currentUserData = this.currentUser.customData;\n    console.log('CHATKIT USER CUSTOM DATA: ', currentUserData);\n\n    // Add update data\n    currentUserData['name'] = _name;\n    currentUserData['bio'] = _bio;\n    currentUserData['major'] = _major;\n    currentUserData['graduationYear'] = _gradYr;\n    currentUserData['interests'] = _interests;\n    currentUserData['clubs'] = _clubs;\n\n    // Send the updated data and update the user\n    this.userService.update(this.currentUser.id, JSON.stringify(currentUserData))\n    .toPromise()\n    .then((data) => {\n\n      console.log('RESPONSE:', data);\n      console.log('UPDATED CHATKIT USER:', this.currentUser);\n\n      this.setUserProfile(data);\n\n      this.editingForm = false;\n      this.loading = false;\n    });\n  }\n\n  // Build profile form\n  initForm() {\n    this.getUserProfile();\n\n    // Build Form\n    this.profileForm = this.formBuilder.group({\n      // Name\n      name: [ this.name, Validators.required ],\n      // Bio\n      bio: [ this.bio, MaxLengthValidator ],\n      // Major\n      major: [ this.major, MaxLengthValidator ],\n      // Graduation year\n      graduationYear: [ this.graduationYear, MaxLengthValidator ],\n      // Interests\n      interests: [ this.interests, MaxLengthValidator ],\n        // Clubs\n      clubs: [ this.clubs, MaxLengthValidator ]\n    });\n  }\n\n  // Set updated profile data\n  setUserProfile(userData) {\n    this.currentUser.customData.avatarURL = userData.avatar_url;\n    this.currentUser.customData.customData = userData.custom_data;\n    this.currentUser.name = userData.name;\n    this.currentUser.updatedAt = userData.updated_at;\n  }\n\n  // Bring in chatkit user data\n  getUserProfile() {\n    try {\n      this.name = this.currentUser.name;\n    } catch (error) {\n      this.name = '';\n    }\n\n    try {\n      this.bio = this.currentUser.customData.bio;\n    } catch (error) {\n      this.bio = '';\n    }\n\n    try {\n      this.major = this.currentUser.customData.major;\n    } catch (error) {\n      this.major = '';\n    }\n\n    try {\n      this.graduationYear = this.currentUser.customData.graduationYear;\n    } catch (error) {\n      this.graduationYear = '';\n    }\n\n    try {\n      this.interests = this.currentUser.customData.interests;\n    } catch (error) {\n      this.interests = '';\n    }\n\n    try {\n      this.clubs = this.currentUser.customData.clubs;\n    } catch (error) {\n      this.clubs = '';\n    }\n  }\n\n  ngOnInit() {\n\n\n    this.authService.getCurrentUser().subscribe((user) => {\n      this.currentUser = user;\n      this.initForm();\n    });\n  }\n}\n","module.exports = \"#user-image{\\n    max-width: 100px;\\n    max-height: 100px;\\n    border: 1px solid #0E425F;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUHJvZmlsZS1WaWV3cy9zbWFsbC9zbWFsbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQix5QkFBeUI7QUFDN0IiLCJmaWxlIjoic3JjL2FwcC9Qcm9maWxlLVZpZXdzL3NtYWxsL3NtYWxsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjdXNlci1pbWFnZXtcbiAgICBtYXgtd2lkdGg6IDEwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDEwMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwRTQyNUY7XG59Il19 */\"","module.exports = \"<!-- Modal -->\\n<div *ngIf=\\\"user\\\" id=\\\"profileModal\\\" class=\\\"modal hide fade col-10 offset-1 col-md-6 offset-md-3\\\" tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content text-center\\\">\\n\\n      <!--Header-->\\n      <div class=\\\"modal-header\\\" style=\\\"border:none;\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" style=\\\"font-size:1.75rem;\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <!--Body-->\\n      <div class=\\\"modal-body\\\">\\n        <!-- Profile Image -->\\n        <img src=\\\"\\\" onerror=\\\"this.src='../../assets/images/DefaultProfile.png'\\\" id=\\\"user-image\\\"\\n        class=\\\"rounded img-fluid mx-auto mb-1 d-block\\\">\\n\\n        <!-- User's Name -->\\n        <div class=\\\"h3 text-secondary text-light-weight mt-3\\\">{{ this.user.name }} </div>\\n\\n        <!-- User's Info -->\\n        <p class=\\\"text-primary\\\" *ngIf=\\\"this.user.customData.graduationYear\\\">&mdash; Class of {{this.user.customData.graduationYear}} &mdash;</p>\\n        <p class=\\\"text-secondary mt-2\\\" *ngIf=\\\"this.user.customData.graduationYear\\\">{{ this.user.customData.bio }}</p>\\n      </div>\\n\\n      <!-- Footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary mx-auto py-2 px-3 text-uppercase\\\" (click)=\\\"addConnection()\\\"\\n        *ngIf=\\\"!isConnection\\\">Add Connection</button>\\n        <span class=\\\"text-light mx-auto py-2\\\" *ngIf=\\\"isConnection\\\">You are connected with this user!</span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-small',\n  templateUrl: './small.component.html',\n  styleUrls: ['./small.component.css']\n})\nexport class SmallComponent implements OnInit {\n\n  bio: string;\n  graduationYear: string;\n\n  @Input() user: any;\n  @Input() isConnection = false;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  // TODO: Implement actual add connection functionality\n  addConnection() {\n    this.isConnection = true;\n  }\n\n}\n","module.exports = \".description{\\n    color:#999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2V0dGluZ3MtVmlld3MvY29ubmVjdGlvbi1zZXR0aW5ncy9jb25uZWN0aW9uLXNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9TZXR0aW5ncy1WaWV3cy9jb25uZWN0aW9uLXNldHRpbmdzL2Nvbm5lY3Rpb24tc2V0dGluZ3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXNjcmlwdGlvbntcbiAgICBjb2xvcjojOTk5O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"pt-4\\\">\\n    <h3 class=\\\"text-secondary pb-3\\\">Notifications:</h3>\\n    <p><input type=\\\"checkbox\\\" id=\\\"news\\\">&nbsp; News emails</p>\\n    <p class=\\\"description\\\">Be the first to find out about Chatversity's latest updates.</p>\\n    <hr />\\n  </div>\\n  <div class=\\\"pt-4\\\">\\n      <p><input type=\\\"checkbox\\\" id=\\\"reminders\\\">&nbsp; Reminders emails</p>\\n      <p class=\\\"description\\\">Stay up to date with everything that you missed out on.</p>\\n    <hr />\\n  </div>\\n  <div class=\\\"pt-4\\\">\\n      <p><input type=\\\"checkbox\\\" id=\\\"product\\\">&nbsp; Product emails</p>\\n      <p class=\\\"description\\\">Get tips on using Chatversity and our others products.</p>\\n    <hr />\\n  </div>\\n  <div class=\\\"pt-4\\\">\\n      <p><input type=\\\"checkbox\\\" id=\\\"text\\\">&nbsp; Text (SMS) Messages</p>\\n      <p class=\\\"description\\\">Get reminders delivered by text message.</p>\\n    <hr />\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-connection-settings',\n  templateUrl: './connection-settings.component.html',\n  styleUrls: ['./connection-settings.component.css']\n})\nexport class ConnectionSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".description{\\n    color:#999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2V0dGluZ3MtVmlld3MvcHJpdmFjeS1zZXR0aW5ncy9wcml2YWN5LXNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9TZXR0aW5ncy1WaWV3cy9wcml2YWN5LXNldHRpbmdzL3ByaXZhY3ktc2V0dGluZ3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXNjcmlwdGlvbntcbiAgICBjb2xvcjojOTk5O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"pt-4\\\">\\n    <h3 class=\\\"text-secondary pb-3\\\">Account Privacy</h3>\\n    <p><input type=\\\"checkbox\\\" id=\\\"2FA\\\">&nbsp; Private Account</p>\\n    <p class=\\\"description\\\">When your account is private, only your connections can see your profile and other information. Your existing followers won't be affected.\\n      </p>\\n    <hr />\\n  </div>\\n  <div class=\\\"pt-4\\\">\\n      <h3 class=\\\"text-secondary pb-3\\\">Activity Status</h3>\\n      <p><input type=\\\"checkbox\\\" id=\\\"2FA\\\">&nbsp; Show Activity Status</p>\\n      <p class=\\\"description\\\">Allow accounts you follow and anyone you message to see when you were last active on Chatversity app. When this is turned off, you won't be able to see the activity status of other accounts.</p>\\n    <hr />\\n  </div>\\n  <div class=\\\"pt-4\\\">\\n      <h3 class=\\\"text-secondary pb-3\\\">Rooms Privacy Defaults</h3>\\n      <p><input type=\\\"checkbox\\\" id=\\\"2FA\\\">&nbsp; Allow Direct Messages from Rooms Members</p>\\n      <p class=\\\"description\\\">This settings is applied when you join a new room. It does not apply retroactively to your existing room.</p>\\n    <hr />\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-settings',\n  templateUrl: './privacy-settings.component.html',\n  styleUrls: ['./privacy-settings.component.css']\n})\nexport class PrivacySettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".description{\\n    color:#999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2V0dGluZ3MtVmlld3Mvc2VjdXJpdHktc2V0dGluZ3Mvc2VjdXJpdHktc2V0dGluZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL1NldHRpbmdzLVZpZXdzL3NlY3VyaXR5LXNldHRpbmdzL3NlY3VyaXR5LXNldHRpbmdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVzY3JpcHRpb257XG4gICAgY29sb3I6Izk5OTtcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"pt-4\\\">\\n    <h3 class=\\\"text-secondary pb-3\\\">Two-Factor Authentication</h3>\\n    <p><input type=\\\"checkbox\\\" id=\\\"2FA\\\">&nbsp; Two-Factor Authentication</p>\\n    <p class=\\\"description\\\">For additional security, enable two-factor authentication. Every time you sign in, you will be required to enter your password and an authentication code so we can make sure it's you.</p>\\n    <hr />\\n  </div>\\n  <div class=\\\"pt-4\\\">\\n    <h3 class=\\\"text-secondary pb-3\\\">Change Password</h3>\\n    <p class=\\\"description\\\">If you think your account has been compromised, please change your password.</p>\\n      <a [routerLink]=\\\"['/forgot']\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary text-uppercase px-4\\\">Change Password</button></a>\\n    <hr />\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-security-settings',\n  templateUrl: './security-settings.component.html',\n  styleUrls: ['./security-settings.component.css']\n})\nexport class SecuritySettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height:100vh;\\\">\\n\\n  <app-top-bar [viewName]=\\\"'Settings'\\\" [headerText]=\\\"headerText\\\"></app-top-bar>\\n  \\n  <div class=\\\"row page-content\\\">\\n    <div class=\\\"col-12 col-lg-3\\\" style=\\\"background-color:#F1F8FC; border-bottom:1px solid #DAE6ED;\\\">\\n      <div class=\\\"my-3 px-1\\\">\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"showProfileView()\\\"\\n        [ngClass]=\\\"{ 'active': ProfileView.current }\\\">My Profile</button>\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"showPrivacyView()\\\"\\n        [ngClass]=\\\"{ 'active': PrivacyView.current }\\\">Privacy</button>\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"showSecurityView()\\\"\\n        [ngClass]=\\\"{ 'active': SecurityView.current }\\\">Security</button>\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"showConnectionsView()\\\"\\n        [ngClass]=\\\"{ 'active': ConnectionsView.current }\\\">Connections</button>\\n        <button class=\\\"btn btn-block custom-btn text-left my-2 p-3 user-action-btn\\\" (click)=\\\"logOut()\\\">Logout <i class=\\\"fa fa-sign-out-alt\\\"></i></button>\\n      </div>\\n    </div>\\n  \\n  <div class=\\\"col-12 col-lg-9\\\" style=\\\"background-color: #fafdff; border-left:1px solid #DAE6ED;\\\">\\n    <div *ngIf=\\\"ProfileView.current\\\">\\n      <app-settings-profile></app-settings-profile>\\n    </div>\\n    <div *ngIf=\\\"PrivacyView.current\\\">\\n      <app-privacy-settings></app-privacy-settings>\\n    </div>\\n    <div *ngIf=\\\"SecurityView.current\\\">\\n      <app-security-settings></app-security-settings>\\n    </div>\\n    <div *ngIf=\\\"ConnectionsView.current\\\">\\n      <app-connection-settings></app-connection-settings>\\n    </div>\\n  </div>\\n\\n  </div>\\n</div>\\n      \"","module.exports = \".active {\\n  background-color: white !important;\\n  color: #0E425F;\\n  border: 1px solid #bddef1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Db25ub3IvQ2hhdHZlcnNpdHlfQXBwL3NyYy9hcHAvU2V0dGluZ3MtVmlld3Mvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQ0FBa0M7RUFDbEMsY0FBYztFQUNkLHlCQUF5QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvU2V0dGluZ3MtVmlld3Mvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aXZle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwRTQyNUY7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2JkZGVmMTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { View } from '../../Core/_models/view';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../Core/_services/auth.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  ProfileView: View = { id: 1, name: 'Profile', current: false };\n  PrivacyView: View = { id: 2, name: 'Privacy', current: false };\n  SecurityView: View = { id: 3, name: 'Security', current: false };\n  ConnectionsView: View = { id: 4, name: 'Connections', current: false };\n\n  views: View[] = [this.ProfileView, this.PrivacyView, this.SecurityView, this.ConnectionsView];\n\n  headerText: string;\n  returnUrl: string;\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router, private _auth: AuthService) { }\n\n  ngOnInit() {\n    this.returnUrl = '/login';\n\n    this.ProfileView.current = true;\n    this.headerText = this.ProfileView.name;\n\n    this.activatedRoute.queryParams.subscribe(params => {\n      const view = params['view'];\n\n      this.handleViewParam(view);\n    });\n  }\n\n  logOut() {\n    this._auth.logout();\n    this.router.navigate([this.returnUrl]);\n  }\n\n  // Display profile view\n  showProfileView() {\n    this.showPage(this.ProfileView.id);\n  }\n\n  // Display privacy view\n  showPrivacyView() {\n    this.showPage(this.PrivacyView.id);\n  }\n\n  // Display security view\n  showSecurityView() {\n    this.showPage(this.SecurityView.id);\n  }\n\n  // Display connections view\n  showConnectionsView() {\n    this.showPage(this.ConnectionsView.id);\n  }\n\n  // Hide all settings views\n  hideAllViews() {\n    this.views.forEach(function (view) {\n      view.current = false;\n    });\n  }\n\n  // Display view by id\n  showPage(_id: number) {\n    this.hideAllViews();\n    switch (_id) {\n      case 2:\n        this.PrivacyView.current = true;\n        this.headerText = this.PrivacyView.name;\n        break;\n      case 3:\n        this.SecurityView.current = true;\n        this.headerText = this.SecurityView.name;\n        break;\n      case 4:\n        this.ConnectionsView.current = true;\n        this.headerText = this.ConnectionsView.name;\n        break;\n      default:\n        this.ProfileView.current = true;\n        this.headerText = this.ProfileView.name;\n        break;\n    }\n  }\n\n  // Display view based on url param\n  handleViewParam(param: string) {\n    switch (param) {\n      case 'privacy':\n        this.showPrivacyView();\n        break;\n      case 'security':\n        this.showSecurityView();\n        break;\n      case 'connections':\n        this.showConnectionsView();\n        break;\n      default:\n        this.showProfileView();\n        break;\n    }\n  }\n}\n","module.exports = \"a {\\n    color: #0E425F !important;\\n    font-size: 1rem;\\n    font-weight: 500;\\n}\\na:hover{\\n    text-decoration: underline;\\n}\\nspan{\\n    font-size: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2hhcmVkL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUI7QUFFQTtJQUNJLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9TaGFyZWQvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYSB7XG4gICAgY29sb3I6ICMwRTQyNUYgIWltcG9ydGFudDtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbmE6aG92ZXJ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbnNwYW57XG4gICAgZm9udC1zaXplOiAxcmVtO1xufSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-light footer-nav justify-content-center mb-3\\\" style=\\\"background-color: inherit !important\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/EULA\\\">EULA</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/\\\">TERMS</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/\\\">PRIVACY</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/about\\\">ABOUT</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/contact\\\">CONTACT</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/faq\\\">FAQ</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/\\\">SUPPORT</a>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://chatversityapp.com/pricing\\\">PRICING</a>\\n    <span class=\\\"navbar-brand pl-4 text-light text-light-weight\\\">COPYRIGHT &copy; 2019 CHATVERSITY</span>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"currentUser\\\">\\n    <a [routerLink]='[\\\"/home\\\"]' id=\\\"top-logo\\\"><img src=\\\"/assets/icons/icon-72x72.png\\\" height=\\\"48\\\" width=\\\"42\\\" class=\\\"m-3\\\"></a>\\n    <ul class=\\\"nav nav-pills nav-justified flex-column align-self-center m-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link mt-1 mb-1 pt-3 pb-3\\\" ngbTooltip=\\\"Home\\\" placement=\\\"right\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"home\\\"><i class=\\\"fa fa-home fa-lg\\\"></i></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link mt-1 mb-1 pt-3 pb-3\\\" ngbTooltip=\\\"Rooms\\\" placement=\\\"right\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"rooms\\\"><i class=\\\"fa fa-door-closed fa-lg\\\"></i>\\n          <span *ngIf=\\\"roomsWithNewMessages.length\\\" class=\\\"badge badge-info\\\">{{ roomsWithNewMessages.length }}</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link mt-1 mb-1 pt-3 pb-3\\\" ngbTooltip=\\\"Messages\\\" placement=\\\"right\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\" routerLink=\\\"rooms\\\"><i class=\\\"far fa-envelope fa-lg\\\"></i></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link mt-1 mb-1 pt-3 pb-3\\\" ngbTooltip=\\\"Settings\\\" placement=\\\"right\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"settings\\\"><i class=\\\"fa fa-cogs fa-lg\\\"></i></a>\\n      </li>\\n      <li class=\\\"nav-item mt-auto\\\">\\n        <a class=\\\"nav-link mt-1 mb-1 pt-3 pb-3\\\" ngbTooltip=\\\"Profile\\\" placement=\\\"right\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"settings\\\"></a>\\n      </li>\\n      <!--<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link mt-1 mb-1 pt-3 pb-3\\\" routerLink=\\\"rooms\\\">\\n          <ng-container *ngIf=\\\"roomMessages\\\">\\n              <span *ngIf=\\\"roomMessages\\\" class=\\\"badge badge-info\\\">{{ incomingMessages }}</span>\\n          </ng-container>\\n        </a>\\n      </li>-->\\n    </ul>\\n</ng-container>\"","module.exports = \"a {\\n  color: #96B7C9 !important;\\n  border-radius: 0px;\\n  border: 1px solid white; }\\n\\n.active {\\n  color: #24B6FF !important;\\n  background-color: #F3F6F8 !important;\\n  border: 1px solid #dce8ef; }\\n\\na:hover {\\n  background-color: #F3F6F8;\\n  border: 1px solid #F3F6F8; }\\n\\n#top-logo {\\n  all: initial; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Db25ub3IvQ2hhdHZlcnNpdHlfQXBwL3NyYy9hcHAvU2hhcmVkL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLHVCQUF1QixFQUFBOztBQUczQjtFQUNJLHlCQUF5QjtFQUN6QixvQ0FBb0M7RUFDcEMseUJBQXlCLEVBQUE7O0FBRzdCO0VBQ0kseUJBQXlCO0VBQ3pCLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL1NoYXJlZC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYSB7XG4gICAgY29sb3I6ICM5NkI3QzkgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiAwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG59XG5cbi5hY3RpdmUge1xuICAgIGNvbG9yOiAjMjRCNkZGICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YzRjZGOCAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkY2U4ZWY7XG59XG5cbmE6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGM0Y2Rjg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0YzRjZGODtcbn1cblxuI3RvcC1sb2dve1xuICAgIGFsbDogaW5pdGlhbDtcbn1cblxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MessagingService } from '../../Core/_services/messaging.service';\nimport { AuthService } from '../../Core/_services/auth.service';\nimport { Observable } from 'rxjs';\nimport { forEach } from '@angular/router/src/utils/collection';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  currentUser: any;\n  rooms: Array<any>;\n  roomsWithNewMessages: Array<any> = [];\n\n  constructor(private authService: AuthService, private messageService: MessagingService) {}\n\n  setNotifications(user) {\n\n    const rooms = user.rooms;\n    let i = 0;\n\n    // foreach room -> compare latest message to user cursor\n    rooms.forEach(room => {\n\n      // get latest message\n      user.fetchMultipartMessages({\n        roomId: room.id,\n        direction: 'older',\n        limit: 1,\n      })\n        .then(messages => {\n\n          // compare dates -> determine if new\n          if (messages[0].id > user.readCursor({\n            roomId: room.id\n          }).position) {\n\n            console.log(`New message in ${messages[0].room.name}`);\n            this.roomsWithNewMessages.push(room);\n\n          }\n        })\n        .catch(err => {\n          console.log(`Error fetching messages: ${err}`);\n        });\n\n        i++;\n\n    });\n  }\n\n  ngOnInit() {\n    this.currentUser = this.authService.currentUser;\n    console.log(this.currentUser);\n  }\n}\n","module.exports = \"#messages_header {\\n    background-color:#FFF;\\n    z-index: 2;\\n    font-family: 'Poppins', sans-serif;\\n    font-weight: bold;\\n    color: #94B0C0;\\n    top:0;\\n    position: -webkit-sticky;\\n    position: sticky;\\n}\\n\\n#header-text{\\n    display: none;\\n}\\n\\n#mobile-header-text{\\n    display: inline-block;\\n}\\n\\n#header-left-text{\\n    padding-left: 0;\\n}\\n\\n@media (min-width: 768px){ /*Medium*/\\n    #header-text{\\n        display: inline-block;\\n    }\\n    #mobile-header-text{\\n        display: none;\\n    }\\n    #header-left-text{\\n        padding-left: 15px;\\n    }\\n}\\n\\n#logoutLink:hover{\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2hhcmVkL3RvcC1iYXIvdG9wLWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixrQ0FBa0M7SUFDbEMsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxLQUFLO0lBQ0wsd0JBQWdCO0lBQWhCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBQ0E7SUFDSSxxQkFBcUI7QUFDekI7O0FBQ0E7SUFDSSxlQUFlO0FBQ25COztBQUVBLDJCQUEyQixTQUFTO0lBQ2hDO1FBQ0kscUJBQXFCO0lBQ3pCO0lBQ0E7UUFDSSxhQUFhO0lBQ2pCO0lBQ0E7UUFDSSxrQkFBa0I7SUFDdEI7QUFDSjs7QUFDQTtJQUNJLDBCQUEwQjtJQUMxQixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvU2hhcmVkL3RvcC1iYXIvdG9wLWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21lc3NhZ2VzX2hlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkZGO1xuICAgIHotaW5kZXg6IDI7XG4gICAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzk0QjBDMDtcbiAgICB0b3A6MDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xufVxuXG4jaGVhZGVyLXRleHR7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbiNtb2JpbGUtaGVhZGVyLXRleHR7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuI2hlYWRlci1sZWZ0LXRleHR7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpeyAvKk1lZGl1bSovXG4gICAgI2hlYWRlci10ZXh0e1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuICAgICNtb2JpbGUtaGVhZGVyLXRleHR7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICNoZWFkZXItbGVmdC10ZXh0e1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgfVxufVxuI2xvZ291dExpbms6aG92ZXJ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"row shadow-sm\\\" id=\\\"messages_header\\\">\\n  <div class=\\\"col 12 col-md-3 py-3\\\">\\n      <div class=\\\"d-flex h-100 align-items-center\\\">\\n        <span id=\\\"header-left-text\\\" class=\\\"text-uppercase text-secondary text-light-weight\\\">{{ viewName }} <span id=\\\"mobile-header-text\\\">&nbsp;|&nbsp; {{ headerText }} &nbsp;|&nbsp; <a (click)=\\\"logOut()\\\" id=\\\"logoutLink\\\">Logout</a></span></span>\\n      </div>\\n  </div>\\n  <div class=\\\"col-md-9 py-3\\\" style=\\\"border-left:1px solid #DAE6ED;\\\" id=\\\"header-text\\\">\\n    <div class=\\\"d-flex h-100 align-items-center\\\">\\n      <span class=\\\"text-uppercase text-secondary text-light-weight pl-3\\\">{{ headerText }}</span>\\n      <button class=\\\"btn btn-outline-secondary text-uppercase mr-3 ml-auto\\\" (click)=\\\"logOut()\\\">Logout</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from '../../Core/_services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n  @Input() viewName: string;\n  @Input() headerText: string;\n\n  returnUrl: string;\n\n  constructor(private auth: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.returnUrl = '/login';\n  }\n\n  // Logout user\n  logOut() {\n    this.auth.logout();\n    this.router.navigate([this.returnUrl]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { routes } from './app.routes';\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div *ngIf=\\\"update\\\" class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\">\\n    <strong>Holy guacamole!</strong> There is an update for Chatversity!\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\\n\\n\\n<div [class.app-mount]=\\\"(currentUser && RemoveNavbarForTesting())\\\">\\n    <div *ngIf=\\\"(currentUser && RemoveNavbarForTesting())\\\" class=\\\"nav-wrapper\\\">\\n        <div id=\\\"primary_navigation\\\">\\n            <app-navbar *ngIf=\\\"(currentUser && RemoveNavbarForTesting())\\\" class=\\\"h-100 d-flex align-items-center flex-column shadow-sm\\\"></app-navbar>\\n        </div>\\n    </div>\\n    <section [class.app-main]=\\\"(currentUser && RemoveNavbarForTesting())\\\">\\n        <router-outlet></router-outlet> \\n    </section>\\n</div>\\n\\n<!-- Router Outlet -->\"","module.exports = \".app-mount {\\n  flex-direction: row;\\n  display: flex;\\n  height: 100vh;\\n  position: absolute;\\n  width: 100vw; }\\n\\n.nav-wrapper {\\n  width: 88px;\\n  position: relative; }\\n\\n#primary_navigation {\\n  width: 88px;\\n  background-color: white;\\n  z-index: 10;\\n  height: 100vh;\\n  position: fixed;\\n  top: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Db25ub3IvQ2hhdHZlcnNpdHlfQXBwL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CO0VBR25CLGFBQWE7RUFDYixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxXQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksV0FBVTtFQUNWLHVCQUFzQjtFQUN0QixXQUFXO0VBQ1gsYUFBYTtFQUNiLGVBQWU7RUFDZixNQUFNLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXBwLW1vdW50IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMHZ3O1xufVxuXG4ubmF2LXdyYXBwZXJ7XG4gICAgd2lkdGg6IDg4cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4jcHJpbWFyeV9uYXZpZ2F0aW9uIHtcbiAgICB3aWR0aDo4OHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGU7XG4gICAgei1pbmRleDogMTA7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './Core/_services/auth.service';\nimport { User } from './Core/_models/user';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MessagingService } from './Core/_services/messaging.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  currentUserLoggedIn: any;\n  title = 'Chatversity';\n  update = false;\n  currUser: any;\n  currentUser: any;\n  // chatkitUser: any;\n\n  constructor(\n      private router: Router,\n      private authService: AuthService,\n      private updates: SwUpdate,\n      private messageService: MessagingService) {}\n\n  //\n  // ─── LOGOUT USER ────────────────────────────────────────────────────────────────\n  //\n\n    logout() {\n      this.authService.logout();\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  // !\n  // ! ─── FOR TESTING ONLY - USE THIS FUNCTION TO REMOVE THE NAVBAR ON PAGES THAT DO NOT NEED IT\n  // !\n\n    RemoveNavbarForTesting() {\n      if (this.router.url === '/login'\n      || this.router.url === '/signup'\n      || this.router.url === '/forgot'\n      || this.router.url === '/new-user'\n      || this.router.url === '/404') {\n        return false;\n      }\n\n      return true;\n    }\n  // ! ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  ngOnInit() {\n    console.log('%cWelcome to Chatversity!', 'font-size: 20px; color: #186fa0;');\n    console.log('Initializing app');\n\n    this.authService.getCurrentUser().subscribe((user) => {\n\n      if (user) { this.currentUser = user; return; } else {\n        this.messageService.initChatkit(this.authService.getUserId());\n      }\n\n\n      console.log(user.rooms);\n      console.log(user);\n    });\n\n  //   this.messageService.initChatkit(this.authService.getUserId())\n  //   .then(chatkitUser => {\n  //     console.log('got chatkit user');\n  //     console.log(chatkitUser);\n  //     this.authService.currentUser = chatkitUser;\n  //     this.currentUser = chatkitUser;\n  //     console.log(this.authService.currentUser);\n\n  // });\n    console.log('User Logged In: ' + this.authService.userLoggedIn());\n  }\n}\n","// Angular Component Imports\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { RouterModule, Routes } from '@angular/router'\nimport { HttpClientModule } from '@angular/common/http'\nimport { AuthService } from './Core/_services/auth.service'\nimport { UserService } from './Core/_services/user.service'\n\n\n// import filepond module\nimport { FilePondModule, registerPlugin } from 'ngx-filepond'\n\n// import and register filepond file type validation plugin\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\nregisterPlugin(FilePondPluginFileValidateType)\n\n\n\n// Angular Bootstrap\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\n// Component Import\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\n\n// Dashboard Component Imports\nimport { DashboardComponent } from './dashboard/dashboard.component'\n\n// Error Component Imports\nimport { ErrorComponent } from './Error-Views/error/error.component'\nimport { PageNotFoundComponent } from './Error-Views/page-not-found/page-not-found.component'\n\n// Home Component Imports\nimport { ViewLatestNewsComponent } from './Home/view-latest-news/view-latest-news.component'\nimport { ViewNavigationHomeComponent } from './Home/view-navigation-home/view-navigation-home.component'\nimport { ViewFriendsHomeComponent } from './Home/view-friends-home/view-friends-home.component'\n\n// Messages Component Imports\nimport { MessagesComponent } from './messages/messages.component'\n\n// Onboarding Component Imports\nimport { LoginComponent } from './Onboarding/login/login.component'\nimport { SignupComponent } from './Onboarding/signup/signup.component'\nimport { ForgotComponent } from './Onboarding/forgot/forgot.component'\nimport { NewUserComponent } from './Onboarding/new-user/new-user.component'\n\n// Profile Component Imports\nimport { ProfileComponent } from './Profile-Views/profile/profile.component'\nimport { SmallComponent } from './Profile-Views/small/small.component'\nimport { SettingsProfileComponent } from './Profile-Views/settings-profile/settings-profile.component'\n\n// Settings Component Imports\nimport { SettingsComponent } from './Settings-Views/settings/settings.component'\n\n// Shared Component Imports\nimport { FooterComponent } from './Shared/footer/footer.component'\nimport { NavbarComponent } from './Shared/navbar/navbar.component'\n\n// Okta Guard and Service\nimport { OktaCallbackComponent, OktaAuthGuard } from '@okta/okta-angular'\nimport { OktaAuthService } from './app.service'\nimport { CallbackComponent } from './Core/callback/callback.component'\nimport { ProtectedComponent } from './Core/protected/protected.component'\nimport { OktaAuthModule } from '@okta/okta-angular'\nimport { routes } from './app.routes'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { ServiceWorkerModule } from '@angular/service-worker'\nimport { environment } from '../environments/environment'\nimport { RoomsComponent } from './rooms/rooms.component'\nimport { ScrollToTopDirective } from './scroll-to-top.directive'\nimport { PrivacySettingsComponent } from './Settings-Views/privacy-settings/privacy-settings.component'\nimport { SecuritySettingsComponent } from './Settings-Views/security-settings/security-settings.component'\nimport { ConnectionSettingsComponent } from './Settings-Views/connection-settings/connection-settings.component'\nimport { TopBarComponent } from './Shared/top-bar/top-bar.component'\nimport { MessagingService } from './Core/_services/messaging.service'\n\nconst config = {\n  issuer: 'https://dev-117825.okta.com',\n  redirectUri: 'http://localhost:4200/implicit/callback',\n  clientId: '0oadacumlPWmV9j5a356'\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    SettingsComponent,\n    ForgotComponent,\n    SmallComponent,\n    CallbackComponent,\n    ProtectedComponent,\n    PageNotFoundComponent,\n    DashboardComponent,\n    CallbackComponent,\n    FooterComponent,\n    NavbarComponent,\n    MessagesComponent,\n    SettingsProfileComponent,\n    NewUserComponent,\n    ViewLatestNewsComponent,\n    ViewNavigationHomeComponent,\n    ViewFriendsHomeComponent,\n    RoomsComponent,\n    ScrollToTopDirective,\n    PrivacySettingsComponent,\n    SecuritySettingsComponent,\n    ConnectionSettingsComponent,\n    TopBarComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    OktaAuthModule.initAuth(config),\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RouterModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    FilePondModule\n  ],\n  providers: [\n    OktaAuthGuard,\n    OktaAuthService,\n    AuthService,\n    UserService,\n    MessagingService\n  ],\n  bootstrap: [AppComponent],\n})\n\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { LoginComponent } from './Onboarding/login/login.component';\nimport { ForgotComponent } from './Onboarding/forgot/forgot.component';\nimport { SignupComponent } from './Onboarding/signup/signup.component';\nimport { PageNotFoundComponent } from './Error-Views/page-not-found/page-not-found.component';\nimport { OktaCallbackComponent } from '@okta/okta-angular';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './Core/_guards/auth.guard';\nimport { RouteGuard } from './Core/_guards/route.guard';\nimport { SettingsComponent } from './Settings-Views/settings/settings.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SettingsProfileComponent } from './Profile-Views/settings-profile/settings-profile.component';\nimport { NewUserComponent } from './Onboarding/new-user/new-user.component';\nimport { ViewNavigationHomeComponent } from './Home/view-navigation-home/view-navigation-home.component';\nimport { RoomsComponent } from './rooms/rooms.component';\n\nexport const routes: Routes = [\n    /* Must be logged out to access these components */\n    { path: 'forgot',  component: ForgotComponent, canActivate: [RouteGuard] },\n    { path: 'signup', component: SignupComponent, canActivate: [RouteGuard] },\n    { path: 'login',  component: LoginComponent, canActivate: [RouteGuard] },\n\n    /* Must be logged in to access these components */\n    { path: '', component: ViewNavigationHomeComponent, canActivate: [AuthGuard] },\n    { path: 'settings',  component: SettingsComponent, canActivate: [AuthGuard] },\n    { path: 'rooms',  component: RoomsComponent, canActivate: [AuthGuard] },\n    { path: 'messages',  component: MessagesComponent, canActivate: [AuthGuard] },\n    { path: 'settings-profile', component: SettingsProfileComponent, canActivate: [AuthGuard] },\n    { path: 'home', component: ViewNavigationHomeComponent, canActivate: [AuthGuard] },\n    { path: 'new-user', component: NewUserComponent, canActivate: [AuthGuard] },\n\n    /* Can be logged in or logged out to access these components */\n    { path: '404', component: PageNotFoundComponent },\n    { path: '**', redirectTo: '/404' },\n    { path: 'implicit/callback', component: OktaCallbackComponent },\n];\n","// app.service.ts\n\n/* Whenever a user attempts to access a route that\nis protected by OktaAuthGuard, it first checks to\nsee if the user has been authenticated.\nIf isAuthenticated() returns false, start the login flow. */\n\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as OktaAuth from '@okta/okta-angular';\n\n@Injectable()\nexport class OktaAuthService {}\n","module.exports = \"\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height:100vh;\\\">\\n\\n  <ng-container *ngIf=\\\"current_room.name\\\">\\n    <app-top-bar [viewName]=\\\"'Messages'\\\" [headerText]=\\\"current_room.name\\\"></app-top-bar>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"!current_room.name\\\">\\n    <app-top-bar [viewName]=\\\"'Messages'\\\" [headerText]=\\\"'Chat'\\\"></app-top-bar>\\n  </ng-container>\\n\\n  <!--<button type=\\\"button\\\" class=\\\"ml-auto btn btn-outline-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addRoomModal\\\" (click)=\\\"roomCreated = false\\\" placement=\\\"left\\\" ngbTooltip=\\\"Create Room\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>\\n  </button>-->\\n\\n  <!--<button type=\\\"button\\\" class=\\\"ml-auto btn btn-outline-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addRoomModal\\\" placement=\\\"left\\\" ngbTooltip=\\\"Edit Room\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\">\\n    <i class=\\\"fa fa-cog\\\"></i>\\n  </button>-->\\n\\n  <div class=\\\"row page-content\\\">\\n    <div  class=\\\"col-12 col-lg-3 overflow-auto\\\" style=\\\"background-color:#F1F8FC; border-bottom:1px solid #DAE6ED;\\\">\\n        \\n          <!-- Begin Messages outlet -->\\n          <div id=\\\"messages\\\" class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <ng-container *ngIf=\\\"rooms && current_room\\\">\\n                    <button *ngFor=\\\"let room of rooms\\\" class=\\\"btn btn-block custom-btn text-left mr-4 my-2 p-3\\\" (click)=\\\"joinRoom(room.id)\\\"\\n                    [ngClass]=\\\"{ 'active': current_room.id == room.id }\\\">\\n                        <div class=\\\"room d-flex align-items-center justify-content-between\\\">\\n                            <ng-container *ngIf=\\\"room?.custom_data !== undefined\\\">\\n                                <!-- <img src=\\\"{{ room.custom_data.roomAvatar }}\\\" alt=\\\"\\\"> -->\\n                            </ng-container>\\n                            <span class=\\\"text-secondary\\\">{{ room.name }}</span>\\n                            <span *ngIf=\\\"roomNotifications[room.id]\\\" class=\\\"badge badge-secondary\\\">New</span>\\n                          </div>\\n                      </button>\\n                  </ng-container>\\n                  <div *ngIf=\\\"(currentUser)\\\" class=\\\"col-12\\\">\\n                      <div class=\\\"message-wrap\\\">\\n                        <img src=\\\"{{currentUser.avatarURL}}\\\" alt=\\\"\\\">\\n                        <span>{{ currentUser.name }}</span>\\n                      </div>\\n                  </div>\\n            </div>\\n          </div>\\n\\n    </div>\\n    <div class=\\\"col-12 col-lg-9 overflow-auto\\\" style=\\\"background-color: #fafdff; border-left:1px solid #DAE6ED;\\\">\\n      <div class=\\\"chat-window h-100 overflow-auto\\\">\\n        <ng-container *ngIf=\\\"room_messages\\\">\\n          <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let message of room_messages\\\">\\n            {{ message.parts[0].payload.content }}\\n            <!-- Messages -->\\n              <div class=\\\"col-12\\\">\\n                {{ message.user_id }}\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n      <div class=\\\"chat-footer\\\" style=\\\"position: absolute; bottom: 0; left: 0; width: 100%;\\\">\\n        <form (ngSubmit)='sendMessage()'>\\n          <input placeholder=\\\"Type a message. Hit Enter to send\\\" type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- Messages Header -->\\n</div>\\n\\n<!-- Create room modal -->\\n<div class=\\\"modal fade\\\" id=\\\"addRoomModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addRoomModal\\\" aria-hidden=\\\"true\\\">\\n\\n  <!-- Show success alert on room created -->\\n  <div *ngIf=\\\"roomCreated\\\" class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n        <strong>Success!</strong> Created room\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>  <!-- End success modal dialog -->\\n\\n  <div *ngIf=\\\"!roomCreated\\\" class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <!-- Modal Title -->\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create Room</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <!-- Add room form -->\\n        <form (ngSubmit)='createRoom()' [formGroup]=\\\"formImport\\\" enctype=\\\"multipart/form-data\\\">\\n          <!-- Room Name -->\\n          <div class=\\\"form-group\\\" formGroupName=\\\"roomNameGroup\\\">\\n            <label for=\\\"room_name\\\">Room name</label>\\n            <input id=\\\"room_name\\\" formControlName=\\\"roomName\\\" placeholder=\\\"Enter a room name\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n            <small id=\\\"roomNameHelp\\\" class=\\\"form-text text-muted\\\">A room name must be no longer than 60 characters.</small>\\n          </div>\\n          <!-- Private? -->\\n          <div class=\\\"form-group\\\" formGroupName=\\\"privateRoomGroup\\\">\\n            <div class=\\\"custom-control custom-switch\\\">\\n              <input type=\\\"checkbox\\\" formControlName=\\\"privateRoom\\\" class=\\\"custom-control-input\\\" id=\\\"private_room\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"private_room\\\">Private room?</label>\\n            </div>\\n          </div>\\n          <!-- Room Avatar -->\\n          <div class=\\\"form-group\\\" formGroupName=\\\"importFileGroup\\\">\\n            <div class=\\\"form-control-file\\\">\\n              <div class=\\\"custom-file\\\">\\n                <img src={{imagePath}} width=\\\"150\\\" alt=\\\"Thumb preview...\\\">\\n                <input formControlName=\\\"importFile\\\" name=\\\"avatar\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg\\\" class=\\\"custom-file-input\\\" id=\\\"customFile\\\" #avatar>\\n                <label class=\\\"custom-file-label\\\" #labelImport for=\\\"customFile\\\">Choose file</label>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- Submit -->\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!formImport.valid\\\">Submit</button>\\n        </form>\\n      </div>\\n      <!-- Modal Footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n      </div>\\n    </div> <!-- End modal content -->\\n  </div> <!-- End modal dialog -->\\n</div> <!-- End modal -->\\n\"","module.exports = \"#messages_header {\\n  background-color: #FFF;\\n  z-index: 2;\\n  font-family: 'Poppins', sans-serif;\\n  font-weight: bold;\\n  color: #94B0C0;\\n  top: 0;\\n  position: -webkit-sticky;\\n  position: sticky; }\\n\\n#messages {\\n  position: relative; }\\n\\n.message-wrap {\\n  background: #F3F6F8;\\n  padding: 16px 16px;\\n  margin-top: 3px;\\n  border-radius: 3px;\\n  transition: 0.2s ease box-shadow;\\n  position: relative; }\\n\\n.message-wrap:hover:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0px;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    right: 0;\\n    z-index: 1;\\n    box-shadow: 0px 4px 12px rgba(21, 157, 246, 0.5); }\\n\\n.message-wrap #status {\\n    font-size: 8px;\\n    margin-left: 40px;\\n    line-height: .005 !important; }\\n\\n.chat-footer form {\\n  width: 100%;\\n  display: flex;\\n  padding-bottom: 40px;\\n  padding-top: 20px; }\\n\\n.chat-footer {\\n  background-color: #FFFFFF;\\n  padding: inherit; }\\n\\n.chat-footer input {\\n  width: 100%;\\n  background: #FFFFFF;\\n  /* Primary 25 */\\n  border: 1px solid #C9EBFF;\\n  box-sizing: border-box;\\n  box-shadow: inset 0px 1px 3px rgba(21, 157, 246, 0.5);\\n  border-radius: 3px;\\n  font-style: normal;\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: normal;\\n  letter-spacing: 0.75px;\\n  padding: 10px;\\n  color: #94B0C0; }\\n\\n.custom-btn {\\n  border-radius: 5px;\\n  color: #96B7C9;\\n  background-color: #F1F8FC; }\\n\\n.custom-btn:hover {\\n  background-color: white;\\n  color: #0E425F;\\n  border: 1px solid #bddef1; }\\n\\n.active {\\n  background-color: white !important;\\n  color: #0E425F;\\n  border: 1px solid #bddef1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Db25ub3IvQ2hhdHZlcnNpdHlfQXBwL3NyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBcUI7RUFDckIsVUFBVTtFQUNWLGtDQUFrQztFQUNsQyxpQkFBaUI7RUFDakIsY0FBYztFQUNkLE1BQUs7RUFDTCx3QkFBZ0I7RUFBaEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBRUksbUJBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGdDQUFnQztFQUNoQyxrQkFBaUIsRUFBQTs7QUFQckI7SUFXUSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsT0FBTztJQUNQLFdBQVc7SUFDWCxRQUFRO0lBQ1IsVUFBVTtJQUNWLGdEQUFnRCxFQUFBOztBQW5CeEQ7SUF1QlEsY0FBYztJQUNkLGlCQUFpQjtJQUNqQiw0QkFBNEIsRUFBQTs7QUFLcEM7RUFDSSxXQUFXO0VBQ1gsYUFBYTtFQUNiLG9CQUFvQjtFQUNwQixpQkFBaUIsRUFBQTs7QUFFckI7RUFDSSx5QkFBd0I7RUFDeEIsZ0JBQWdCLEVBQUE7O0FBRXBCO0VBQ0ksV0FBVTtFQUNWLG1CQUFtQjtFQUNuQixlQUFBO0VBQ0EseUJBQXlCO0VBQ3pCLHNCQUFzQjtFQUN0QixxREFBcUQ7RUFDckQsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsYUFBWTtFQUNaLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLHlCQUF5QixFQUFBOztBQUU3QjtFQUNJLHVCQUF1QjtFQUN2QixjQUFjO0VBQ2QseUJBQXlCLEVBQUE7O0FBRzdCO0VBQ0ksa0NBQWtDO0VBQ2xDLGNBQWM7RUFDZCx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21lc3NhZ2VzX2hlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkZGO1xuICAgIHotaW5kZXg6IDI7XG4gICAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzk0QjBDMDtcbiAgICB0b3A6MDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xufVxuXG4jbWVzc2FnZXMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm1lc3NhZ2Utd3JhcCB7XG5cbiAgICBiYWNrZ3JvdW5kOiNGM0Y2Rjg7XG4gICAgcGFkZGluZzogMTZweCAxNnB4O1xuICAgIG1hcmdpbi10b3A6IDNweDtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgdHJhbnNpdGlvbjogMC4ycyBlYXNlIGJveC1zaGFkb3c7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG5cblxuICAgICY6aG92ZXI6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMHB4O1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDRweCAxMnB4IHJnYmEoMjEsIDE1NywgMjQ2LCAwLjUpOyAgICBcbiAgICB9XG5cbiAgICAjc3RhdHVzIHtcbiAgICAgICAgZm9udC1zaXplOiA4cHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogLjAwNSAhaW1wb3J0YW50O1xuICAgIH1cblxufVxuXG4uY2hhdC1mb290ZXIgZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDBweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbn1cbi5jaGF0LWZvb3RlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkZGRkZGOyBcbiAgICBwYWRkaW5nOiBpbmhlcml0O1xufVxuLmNoYXQtZm9vdGVyIGlucHV0IHtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgLyogUHJpbWFyeSAyNSAqL1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNDOUVCRkY7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwcHggMXB4IDNweCByZ2JhKDIxLCAxNTcsIDI0NiwgMC41KTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuNzVweDtcbiAgICBwYWRkaW5nOjEwcHg7XG4gICAgY29sb3I6ICM5NEIwQzA7XG59XG5cbi5jdXN0b20tYnRue1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogIzk2QjdDOTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGOEZDO1xufVxuLmN1c3RvbS1idG46aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY29sb3I6ICMwRTQyNUY7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2JkZGVmMTtcbn1cblxuLmFjdGl2ZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMEU0MjVGO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZGRlZjE7XG59XG4iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { MessagingService } from '../Core/_services/messaging.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../Core/_services/auth.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n  @ViewChild('avatar') avatar: ElementRef;\n  fileToUpload: File;\n\n  imagePath: any;\n\n  notificationCount: any;\n\n  rooms: Array<any> = [];\n  user_id: any;\n  room_messages: Array<any> = [];\n  // room_messages: Observable<any[]>;\n  current_room: any;\n  chatUser: any;\n\n  _message = '';\n  roomCreated: boolean;\n  roomNotifications: Array<any> = [];\n  currentUser: any;\n  subscription: any;\n  incomingMessages: any;\n\n  get message(): string {\n    return this._message;\n  }\n  set message(value: string) {\n    this._message = value;\n  }\n\n  // TODO: Can probably remove these props\n  _roomPrivate = '';\n  get roomPrivate(): string {\n    return this._roomPrivate;\n  }\n  set roomPrivate(value: string) {\n    this._roomPrivate = value;\n  }\n\n  formImport = new FormGroup({\n    importFileGroup: new FormGroup({\n      importFile: new FormControl(''),\n    }),\n    roomNameGroup: new FormGroup({\n      roomName: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(60)\n      ])\n    }),\n    privateRoomGroup: new FormGroup({\n      privateRoom: new FormControl('')\n    })\n  });\n\n  constructor(private http: HttpClient, private msgService: MessagingService, private authService: AuthService) {}\n\n  url: string;\n  onFileChange(event) {\n    if (!(event.target.files && event.target.files[0])) { return; }\n    const file = event.target.files[0];\n    this.fileToUpload = file;\n    const reader = new FileReader();\n    reader.readAsDataURL(file); // read file as data url\n    reader.onload = (_event) => {\n      console.log(reader.result); // log base64 string\n      this.imagePath = reader.result;\n    };\n  }\n\n\n  // Send a message\n  sendMessage() {\n    const { message, currentUser } = this;\n    this.currentUser.sendMessage({\n      text: message,\n      roomId: this.current_room.id,\n    }).then(res => {\n      console.log(res);\n    });\n    this.message = '';\n  }\n\n\n  // Join a room\n  joinRoom(roomID) {\n    this.currentUser.joinRoom({roomId: roomID}).then(room => {\n      this.current_room = room;\n\n      // After joining room, fetch messages\n      this.currentUser.fetchMultipartMessages({roomId: roomID}).then(messages => {\n\n        // Check if messages\n        if (messages === undefined || messages.length === 0) { return; }\n\n        // Set read cursor\n        this.currentUser.setReadCursor({\n          roomId: this.current_room.id,\n          position: messages[messages.length - 1].id\n        })\n        .then(() => {\n          this.roomNotifications[room.id] = false;\n        }); // Remove marker from notifications array\n        // .then(() => {\n        //     console.log('Set cursor');\n        //   })\n        //   .catch(err => {\n        //     console.log(`Error setting cursor: ${err}`);\n        //   });\n        messages.forEach(message => {\n          // console.log(message.parts[0].payload.content);\n        });\n        this.room_messages = messages;\n      });\n    });\n  }\n  // end Join room\n\n\n  // Function => check if user has unread messages in a room\n  hasUnread(roomID) {\n\n    let hasUnread = false; // Track return status\n\n    // First, check if cursor exists\n    const cursor = this.currentUser.readCursor({\n      roomId: roomID\n    });\n\n      // if read cursor ID !== latest message ID...\n      this.currentUser.fetchMultipartMessages({ // Get latest message\n        roomId: roomID,\n        limit: 1,\n      })\n      .then(messages => {\n        if (cursor) { // Has cursor so check cursor pos vs latest message id\n          hasUnread = (cursor.position !== messages[0].initialId) ? true : false;\n        } else {\n          // No cursor => set\n        }\n      })\n      .catch(err => {\n        console.log(`Error fetching messages: ${err}`);\n      });\n\n    return hasUnread;\n  }\n\n\n  // Get Chatkit user\n  getUser(user_id) {\n    return this.http.post<any>(`${environment.apiUrl}/chatkit/getuser`, {user_id})\n    .toPromise()\n    .then(res => {\n      return res;\n      console.log(res);\n    })\n    .catch(error => console.log(error));\n  }\n\n  // Get Chatkit user's rooms\n  getUserRooms(user_id) {\n    return this.http.post<any>(`${environment.apiUrl}/chatkit/getuserrooms`, {user_id})\n    .toPromise()\n    .then(res => {\n      // this.rooms = res;\n      console.log(res);\n      return res;\n    })\n    .catch(error => console.log(error));\n  }\n\n  //\n  // ─── SUBSCRIBE TO ROOM ──────────────────────────────────────────────────────────\n  //\n\n    subscribeToRoom(roomID) {\n      this.currentUser.subscribeToRoomMultipart({\n        roomId: roomID,\n        hooks: {\n          onMessage: message => {\n            // When a message is received...\n\n            // Push to messages array and update view\n            this.room_messages.push(message);\n\n            // Get the users last cursor position from the room\n            const cursor = this.currentUser.readCursor({\n              roomId: message.roomId\n            });\n\n            if ((cursor.position !== message.id) && (message.roomId !== this.current_room.id)) {\n              // If the current user has not seen the message, AND the message was received in a different room,\n              // add marker to notification array\n              this.roomNotifications[message.room.id] = true;\n            } else {\n              // Otherwise, message was sent in current room, so all we must do is update the\n              // read cursor for the current user's room\n              this.currentUser.setReadCursor({\n                roomId: message.roomId,\n                position: message.id,\n              });\n            }\n\n            // Count rooms with unread notifucations\n            let roomsWithNotifications = 0;\n            this.roomNotifications.forEach(room => {\n              roomsWithNotifications += room === true ? 1 : 0;\n            });\n            // Add to global notification counter\n            // this.msgService.setRoomsWithNotifications(roomsWithNotifications);\n          },\n          onAddedToRoom: room => {\n            console.log(`Added to room ${room.name}`);\n          }\n        },\n        messageLimit: 0\n      });\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n  // Create room\n  createRoom() {\n    this.roomCreated = true; return;\n    // this.isLoading = true; // Display loading icon\n    const roomName = this.formImport.value.roomNameGroup.roomName;\n    const privateRoom = this.formImport.value.privateRoomGroup.privateRoom;\n    const roomAvatar = this.formImport.value.importFileGroup.importFile;\n    console.log(this.formImport.value.roomNameGroup.roomName);\n    console.log(this.formImport.value.privateRoomGroup.privateRoom);\n    console.log(this.formImport.value.importFileGroup.importFile);\n\n    console.log(this.fileToUpload);\n    console.log(this.formImport.value);\n\n    const formData = new FormData();\n    const b64string = JSON.stringify(this.imagePath);\n\n    formData.append('file', b64string);\n    formData.append('testvar', 'my test var value');\n\n    console.log(formData);\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    headers.append('Accept', 'application/json');\n\n    // Create room and insert room avatar into database\n    this.http.post(`${environment.apiUrl}/asdf`, formData)\n    .toPromise()\n    .then(res => { // Image uploaded\n      console.log(res);\n\n      console.log('Image uploaded');\n      this.currentUser.createRoom({ // Create the room\n        name: roomName,\n        private: true,\n        customData: { roomAvatar: res['_id'] },\n      }).then(room => { // Success\n        // this.isLoading = false;\n        this.roomCreated = true;\n        console.log(`Created room called ${room.name}`);\n      })\n      .catch(err => { // Failed room creation\n        console.log(`Error creating room ${err}`);\n      });\n    })\n    .catch(err => { // Failed image upload\n      console.log('Error uploading room image');\n    });\n  }\n\n\n  ngOnInit() {\n    this.subscription = this.authService.currentUser.subscribe(\n      (user) => {\n        this.currentUser = user;\n        this.rooms = user.rooms;\n      }\n    );\n    }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height:100vh;\\\">\\n\\n  <ng-container *ngIf=\\\"current_room\\\">\\n    <app-top-bar [viewName]=\\\"'Rooms'\\\" [headerText]=\\\"current_room.name\\\"></app-top-bar>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"!current_room\\\">\\n    <app-top-bar [viewName]=\\\"'Rooms'\\\" [headerText]=\\\"'Chat'\\\"></app-top-bar>\\n  </ng-container>\\n\\n  <!--<button type=\\\"button\\\" class=\\\"ml-auto btn btn-outline-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addRoomModal\\\" placement=\\\"left\\\" ngbTooltip=\\\"Edit Room\\\" triggers=\\\"hover\\\" [autoClose]=\\\"true\\\">\\n    <i class=\\\"fa fa-cog\\\"></i>\\n  </button>-->\\n\\n  <div class=\\\"row page-content\\\">\\n    <div class=\\\"col-12 col-lg-3 overflow-auto\\\" style=\\\"background-color:#F1F8FC; border-bottom:1px solid #DAE6ED;\\\">\\n        \\n          <!-- Begin rooms list -->\\n          <div *ngIf=\\\"rooms && current_room\\\" id=\\\"messages\\\" class=\\\"row\\\">\\n            <div class=\\\"col-12 my-2 px-3\\\">\\n                <button class=\\\"btn btn-block custom-btn text-left mr-4 my-2 p-3 user-action-btn\\\"  data-toggle=\\\"modal\\\"\\n                 data-target=\\\"#addRoomModal\\\" (click)=\\\"roomCreated = false\\\">New Room <i class=\\\"fa fa-plus\\\"></i> </button>\\n\\n                <ng-container *ngFor=\\\"let room of rooms\\\">\\n                <button class=\\\"btn btn-block custom-btn text-left my-2 p-3\\\" (click)=\\\"joinRoom(room.id)\\\"\\n                [ngClass]=\\\"{ 'active': current_room.id == room.id }\\\">\\n                    <div class=\\\"room d-flex align-items-center justify-content-between\\\">\\n                        <ng-container *ngIf=\\\"room?.custom_data !== undefined\\\">\\n                            <div class=\\\"\\\" [ngStyle]=\\\"{ 'background-image': 'url(assets/avatars/' + room.customData.roomAvatar + ')', 'height':'50px', 'width':'50px', 'background-size':'cover', 'background-position':'center, center' }\\\">\\n                            </div>\\n                        </ng-container>\\n                        <span>{{ room.name }}</span>\\n                        <span *ngIf=\\\"roomNotifications[room.id]\\\" class=\\\"badge badge-secondary\\\">New</span>\\n                      </div>\\n                  </button>\\n                </ng-container>\\n              </div>\\n            <div *ngIf=\\\"currentUser\\\" class=\\\"col-12\\\">\\n                <div class=\\\"message-wrap\\\">\\n                  <img src=\\\"https://images.unsplash.com/photo-1509868918748-a554ad25f858?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=3159ec467959b2aada4b75d565c270aa\\\" class=\\\"img-fluid\\\" alt=\\\"\\\" style=\\\"border-radius: 100px;width: 50px;height: 50px;object-fit: cover;object-position: center;\\\">\\n                  <span>{{ currentUser.name }}</span>\\n                  <button class=\\\"btn btn-link\\\" (click)=\\\"viewUserModal\\\">{{ currentUser.name }}</button>\\n                </div>\\n            </div>\\n          </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-9 overflow-auto\\\" style=\\\"background-color: #fafdff; border-left:1px solid #DAE6ED;\\\">\\n      <div class=\\\"chat-window overflow-auto\\\" style=\\\"height: calc(100vh - 174px); position:relative;\\\">\\n        <ng-container *ngIf=\\\"rooms_with_messages\\\">\\n          <div class=\\\"container-fluid mt-3\\\" #chatReel>\\n            <div *ngFor=\\\"let room of rooms_with_messages | keyvalue\\\">\\n                <ng-container *ngIf=\\\"room.key===current_room.id\\\">\\n                    <div class=\\\"row\\\" id=\\\"chatReel\\\">\\n                        <!-- [ngClass]=\\\"current_room.userStore.users[message.senderId].id == chatkitUser.id ? 'text-secondary-light' : 'text-secondary'\\\"  -->\\n                        <!-- Messages -->\\n                        <div class=\\\"col-12\\\">\\n                            <span role=\\\"button\\\" tabindex=\\\"0\\\" class=\\\"chat-user-link\\\" (click)=\\\"setSelectedRoomMember(current_room.users[room.value.senderId])\\\" data-toggle=\\\"modal\\\" data-target=\\\"#profileModal\\\" style=\\\"font-weight:500\\\">\\n                                {{ room.value.sender.name }}\\n                            </span>\\n                          <small class=\\\"text-muted pl-1\\\" style=\\\"font-size:12px;\\\">\\n                            <span *ngIf=\\\"MessageSentToday(room.value.createdAt);else full_date\\\">Today at {{ room.value.createdAt | date:'shortTime' }}</span>\\n                            <ng-template #full_date>{{ room.value.createdAt | date }} at {{ room.value.createdAt | date:'shortTime' }}</ng-template>\\n                          </small>\\n                          <p style=\\\"color:#626e7a; font-size:15px;\\\">{{ room.value.parts[0].payload.content }}</p>\\n                          <hr>\\n                        </div>\\n                      </div>\\n                </ng-container>\\n              \\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n      <div class=\\\"chat-footer\\\" style=\\\"position: absolute; bottom: 0; left: 0; width: 100%;\\\">\\n        <!--TODO: Change placeholder to only display room name if room name is defined-->\\n        <form (ngSubmit)='sendMessage()'>\\n          <input *ngIf=\\\"current_room\\\" [placeholder]=\\\"(current_room.name) ? 'Message ' + current_room.name : 'Message'\\\" type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\">\\n        </form>\\n      </div>\\n    </div>\\n\\n    <!-- view user modal -->\\n    <app-small *ngIf=\\\"selectedRoomMember\\\" [user]=\\\"selectedRoomMember\\\" [isConnection]=\\\"isConnection\\\"></app-small>\\n    <!-- end view user modal -->\\n    \\n  </div>\\n  <!-- Messages Header -->\\n</div>\\n\\n<!-- Create room modal -->\\n<div class=\\\"modal fade\\\" id=\\\"addRoomModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addRoomModal\\\" aria-hidden=\\\"true\\\">\\n\\n  <!-- Show success alert on room created -->\\n  <div *ngIf=\\\"roomCreated\\\" class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n        <strong>Success!</strong> Created room\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>  <!-- End success modal dialog -->\\n\\n  <div *ngIf=\\\"!roomCreated\\\" class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <!-- Modal Title -->\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create Room</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <!-- Add room form -->\\n        <form (ngSubmit)='createRoom()' [formGroup]=\\\"formImport\\\" enctype=\\\"multipart/form-data\\\">\\n          <!-- Room Name -->\\n          <div class=\\\"form-group\\\" formGroupName=\\\"roomNameGroup\\\">\\n            <label for=\\\"room_name\\\">Room name</label>\\n            <input id=\\\"room_name\\\" formControlName=\\\"roomName\\\" placeholder=\\\"Enter a room name\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n            <small id=\\\"roomNameHelp\\\" class=\\\"form-text text-muted\\\">A room name must be no longer than 60 characters.</small>\\n          </div>\\n          <!-- Private? -->\\n          <div class=\\\"form-group\\\" formGroupName=\\\"privateRoomGroup\\\">\\n            <div class=\\\"custom-control custom-switch\\\">\\n              <input type=\\\"checkbox\\\" formControlName=\\\"privateRoom\\\" class=\\\"custom-control-input\\\" id=\\\"private_room\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"private_room\\\">Private room?</label>\\n            </div>\\n          </div>\\n          <!-- Room Avatar -->\\n          <div class=\\\"form-group\\\" formGroupName=\\\"userAvatarFileGroup\\\">\\n            <div class=\\\"form-control-file\\\">\\n              <div class=\\\"custom-file\\\">\\n                <img src={{imagePath}} width=\\\"150\\\" alt=\\\"Thumb preview...\\\">\\n                <input formControlName=\\\"avatar\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg\\\" class=\\\"custom-file-input\\\" id=\\\"avatar\\\" #avatar>\\n                <label class=\\\"custom-file-label\\\" for=\\\"avatar\\\">Choose file</label>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- Submit -->\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!formImport.valid\\\">Submit</button>\\n        </form>\\n      </div>\\n      <!-- Modal Footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n      </div>\\n    </div> <!-- End modal content -->\\n  </div> <!-- End modal dialog -->\\n</div> <!-- End modal -->\\n\"","module.exports = \"#messages_header {\\n  background-color: #FFF;\\n  z-index: 2;\\n  font-family: 'Poppins', sans-serif;\\n  font-weight: bold;\\n  color: #94B0C0;\\n  top: 0;\\n  position: -webkit-sticky;\\n  position: sticky; }\\n\\n#messages {\\n  position: relative; }\\n\\n.message-wrap {\\n  background: #F3F6F8;\\n  padding: 16px 16px;\\n  margin-top: 3px;\\n  border-radius: 3px;\\n  transition: 0.2s ease box-shadow;\\n  position: relative; }\\n\\n.message-wrap:hover:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0px;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    right: 0;\\n    z-index: 1;\\n    box-shadow: 0px 4px 12px rgba(21, 157, 246, 0.5); }\\n\\n.message-wrap #status {\\n    font-size: 8px;\\n    margin-left: 40px;\\n    line-height: .005 !important; }\\n\\n.chat-footer form {\\n  width: 100%;\\n  display: flex;\\n  padding-bottom: 40px;\\n  padding-top: 20px; }\\n\\n.chat-footer {\\n  background-color: #FFFFFF;\\n  padding: inherit;\\n  border-top: 1px solid #DAE6ED; }\\n\\n.chat-footer input {\\n  width: 100%;\\n  background: #FFFFFF;\\n  /* Primary 25 */\\n  border: 1px solid #C9EBFF;\\n  box-sizing: border-box;\\n  border-radius: 3px;\\n  font-style: normal;\\n  font-weight: 500;\\n  font-size: 14px;\\n  line-height: normal;\\n  letter-spacing: 0.75px;\\n  padding: 10px;\\n  color: #0E425F; }\\n\\n.chat-footer input::-webkit-input-placeholder {\\n  color: #96B7C9; }\\n\\n.chat-footer input:-ms-input-placeholder {\\n  color: #96B7C9; }\\n\\n.chat-footer input::-ms-input-placeholder {\\n  color: #96B7C9; }\\n\\n.chat-footer input::placeholder {\\n  color: #96B7C9; }\\n\\n.active {\\n  background-color: white !important;\\n  color: #0E425F;\\n  border: 1px solid #bddef1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Db25ub3IvQ2hhdHZlcnNpdHlfQXBwL3NyYy9hcHAvcm9vbXMvcm9vbXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBcUI7RUFDckIsVUFBVTtFQUNWLGtDQUFrQztFQUNsQyxpQkFBaUI7RUFDakIsY0FBYztFQUNkLE1BQUs7RUFDTCx3QkFBZ0I7RUFBaEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksbUJBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGdDQUFnQztFQUNoQyxrQkFBaUIsRUFBQTs7QUFOckI7SUFTUSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsT0FBTztJQUNQLFdBQVc7SUFDWCxRQUFRO0lBQ1IsVUFBVTtJQUNWLGdEQUFnRCxFQUFBOztBQWpCeEQ7SUFxQlEsY0FBYztJQUNkLGlCQUFpQjtJQUNqQiw0QkFBNEIsRUFBQTs7QUFJcEM7RUFDSSxXQUFXO0VBQ1gsYUFBYTtFQUNiLG9CQUFvQjtFQUNwQixpQkFBaUIsRUFBQTs7QUFFckI7RUFDSSx5QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLDZCQUE2QixFQUFBOztBQUVqQztFQUNJLFdBQVU7RUFDVixtQkFBbUI7RUFDbkIsZUFBQTtFQUNBLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFFdEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsYUFBWTtFQUNaLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxjQUFjLEVBQUE7O0FBRGxCO0VBQ0ksY0FBYyxFQUFBOztBQURsQjtFQUNJLGNBQWMsRUFBQTs7QUFEbEI7RUFDSSxjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksa0NBQWtDO0VBQ2xDLGNBQWM7RUFDZCx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Jvb21zL3Jvb21zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21lc3NhZ2VzX2hlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkZGO1xuICAgIHotaW5kZXg6IDI7XG4gICAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzk0QjBDMDtcbiAgICB0b3A6MDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xufVxuXG4jbWVzc2FnZXMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm1lc3NhZ2Utd3JhcCB7XG4gICAgYmFja2dyb3VuZDojRjNGNkY4O1xuICAgIHBhZGRpbmc6IDE2cHggMTZweDtcbiAgICBtYXJnaW4tdG9wOiAzcHg7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIHRyYW5zaXRpb246IDAuMnMgZWFzZSBib3gtc2hhZG93O1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuXG4gICAgJjpob3ZlcjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwcHg7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBib3gtc2hhZG93OiAwcHggNHB4IDEycHggcmdiYSgyMSwgMTU3LCAyNDYsIDAuNSk7ICAgIFxuICAgIH1cblxuICAgICNzdGF0dXMge1xuICAgICAgICBmb250LXNpemU6IDhweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAuMDA1ICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4uY2hhdC1mb290ZXIgZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDBweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbn1cbi5jaGF0LWZvb3RlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkZGRkZGOyBcbiAgICBwYWRkaW5nOiBpbmhlcml0O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjREFFNkVEO1xufVxuLmNoYXQtZm9vdGVyIGlucHV0IHtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgLyogUHJpbWFyeSAyNSAqL1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNDOUVCRkY7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAvL2JveC1zaGFkb3c6IGluc2V0IDBweCAxcHggM3B4IHJnYmEoMjEsIDE1NywgMjQ2LCAwLjUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgICBsZXR0ZXItc3BhY2luZzogMC43NXB4O1xuICAgIHBhZGRpbmc6MTBweDtcbiAgICBjb2xvcjogIzBFNDI1Rjtcbn1cblxuLmNoYXQtZm9vdGVyIGlucHV0OjpwbGFjZWhvbGRlcntcbiAgICBjb2xvcjogIzk2QjdDOTtcbn1cblxuLmFjdGl2ZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMEU0MjVGO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZGRlZjE7XG59XG4gICJdfQ== */\"","import { Component, OnInit, ElementRef, ViewChild, AfterViewInit, ViewChildren, QueryList, ViewContainerRef} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { MessagingService } from '../Core/_services/messaging.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppComponent } from '../app.component';\nimport { AuthService } from '../Core/_services/auth.service';\nimport { parseDate } from 'tough-cookie';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.scss']\n})\nexport class RoomsComponent implements OnInit, AfterViewInit {\n\n  @ViewChildren('chatReel') chatReel: QueryList<ViewContainerRef>;\n  currUser: any;\n  subscription: any;\n  fileToUpload: File;\n  imagePath: any;\n  selectedFile: File = null;\n  fd = new FormData();\n  rooms: Array<any> = [];\n  currentUser: any;\n  user_id: any;\n  rooms_with_messages: any = {};\n  current_room: any;\n  chatUser: any;\n  roomCreated: boolean;\n  roomNotifications: Array<any> = [];\n  url: string;\n\n  // TODO: Can probably remove these props\n  _roomPrivate = '';\n  selectedRoomMember: any;\n  messages: Object;\n  get roomPrivate(): string {\n    return this._roomPrivate;\n  }\n  set roomPrivate(value: string) {\n    this._roomPrivate = value;\n  }\n\n  _message = '';\n  get message(): string {\n    return this._message;\n  }\n  set message(value: string) {\n    this._message = value;\n  }\n\n  formImport = new FormGroup({\n    userAvatarFileGroup: new FormGroup({\n      avatar: new FormControl(''),\n    }),\n    roomNameGroup: new FormGroup({\n      roomName: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(60)\n      ])\n    }),\n    privateRoomGroup: new FormGroup({\n      privateRoom: new FormControl('')\n    })\n  });\n\n  //\n  // ─── CONSTRUCTOR ────────────────────────────────────────────────────────────────\n  //\n    constructor(private http: HttpClient, private messageService: MessagingService, private authService: AuthService) {}\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── DETECT FILE CHANGE FOR ROOM AVATAR ON CREATION ─────────────────────────────\n  //\n\n    onFileChange(event) {\n\n      if (!(event.target.files && event.target.files[0])) { return; }\n\n      this.selectedFile = <File>event.target.files[0];\n      this.fd.append('avatar', this.selectedFile, this.selectedFile.name);\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── VIEW A USER IN THE ROOM ────────────────────────────────────────────────────\n  //\n\n    setSelectedRoomMember(user: any) {\n      this.selectedRoomMember = user;\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── SEND A MESSAGE ─────────────────────────────────────────────────────────────\n  //\n\n    sendMessage() {\n      const { message, currentUser } = this;\n      this.currentUser.sendMessage({\n        text: message,\n        roomId: this.current_room.id,\n      }).then(res => {\n        console.log(res);\n        console.log();\n\n      });\n      this.message = '';\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── JOIN A ROOM ────────────────────────────────────────────────────────────────\n  //\n\n    joinRoom(roomID) {\n\n      this.messageService.joinRoom(this.currentUser, roomID).then((room) => {\n\n        // update current room\n        this.current_room = room;\n      });\n\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── CHECK UNREAD MESSAGES ──────────────────────────────────────────────────────\n  //\n\n    hasUnread(roomID) {\n\n      let hasUnread = false; // Track return status\n\n      // First, check if cursor exists\n      const cursor = this.currentUser.readCursor({\n        roomId: roomID\n      });\n\n      // if read cursor ID !== latest message ID...\n      this.currentUser.fetchMultipartMessages({ // Get latest message\n        roomId: roomID,\n        limit: 1,\n      })\n      .then(messages => {\n        if (cursor) { // Has cursor so check cursor pos vs latest message id\n          hasUnread = (cursor.position !== messages[0].initialId) ? true : false;\n        } else {\n          // No cursor => set\n        }\n      })\n      .catch(err => {\n        console.log(`Error fetching messages: ${err}`);\n      });\n\n      return hasUnread;\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── GET CHATKIT USER ───────────────────────────────────────────────────────────\n  //\n\n    getUser(user_id) {\n      return this.http.post<any>(`${environment.apiUrl}/chatkit/getuser`, {user_id})\n      .toPromise()\n      .then(res => {\n        return res;\n        console.log(res);\n      })\n      .catch(error => console.log(error));\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── GET CHATKIT USERS ROOMS ────────────────────────────────────────────────────\n  //\n\n    getUserRooms(user_id) {\n      return this.http.post<any>(`${environment.apiUrl}/chatkit/getuserrooms`, {user_id})\n      .toPromise()\n      .then(res => {\n        // this.rooms = res;\n        console.log(res);\n        return res;\n      })\n      .catch(error => console.log(error));\n    }\n  // ─────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── CREATE ROOM ────────────────────────────────────────────────────────────────\n  //\n\n    createRoom() { // TODO: Add to message service\n\n      const roomName = this.formImport.value.roomNameGroup.roomName;\n      let roomAvatar = '';\n\n      // TODO: Add this to upload service\n      // Upload image\n      this.http.post(`${environment.apiUrl}/rooms/avatar`, this.fd)\n      .toPromise()\n      .then( avatar => {\n        roomAvatar = avatar['filename']; // Store path\n        console.log(roomAvatar);\n        // Create the room\n        this.currentUser.createRoom({ // Create the room\n          name: roomName,\n          private: false,\n          customData: { roomAvatar: roomAvatar }, // Add room avatar to custom room data\n        }).then( room => { // Succes\n            this.rooms.push(room); // Add the new room to the list\n            this.roomCreated = true;\n            console.log(room);\n            console.log(`Created room called ${room.name}`);\n          })\n          .catch(err => { // Failed room creation\n            console.log(`Error creating room ${err}`);\n          });\n      });\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  //\n  // ─── CHECK IF MESSAGE TIMESTAMP IS TODAY ────────────────────────────────────────\n  //\n\n    MessageSentToday(msgDate: Date) {\n\n      // get current date\n      const currDate = new Date();\n      currDate.setDate(currDate.getDate());\n      // console.log(currDate);\n\n\n      // get message date\n      msgDate = new Date(msgDate);\n      // console.log(msgDate);\n\n      const daysBetween = Math.floor(( Date.parse(currDate.toDateString()) - Date.parse(msgDate.toDateString()) ) / 86400000);\n\n      if (daysBetween >= 7) {\n        console.log('Message is at least 7 days old');\n      }\n      return false;\n    }\n  // ────────────────────────────────────────────────────────────────────────────────\n\n\n\n  ngOnInit() {\n\n    this.authService.getCurrentUser().subscribe((user) => {\n      this.currentUser = user;\n      this.rooms = user.rooms;\n      this.current_room = this.messageService.getLatestRoom(user);\n      console.log(this.current_room);\n\n      console.log(user.rooms);\n      console.log(user);\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.chatReel.changes.subscribe(c => {\n      c.toArray().forEach(item => {\n        item.nativeElement.offsetParent.scrollTop = item.nativeElement.offsetParent.scrollHeight;\n      });\n    });\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appScrollToTop]'\n})\nexport class ScrollToTopDirective {\n\n  constructor(el: ElementRef) {\n    el.nativeElement.style.backgroundColor = 'yellow';\n    console.log(el.nativeElement.offsetHeight);\n }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3200', // TODO: update this m to the node server after going live\n  chatkitTestTokenEndpoint: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/a54bdf12-93d6-46f9-be3b-bfa837917fb5',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3200',\n  chatkitTestTokenEndpoint: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/a54bdf12-93d6-46f9-be3b-bfa837917fb5',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}