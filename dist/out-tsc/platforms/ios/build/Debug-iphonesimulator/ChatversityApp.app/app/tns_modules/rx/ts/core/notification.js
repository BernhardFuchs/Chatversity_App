/// <reference path="./disposables/disposable.ts" />
/// <reference path="./concurrency/scheduler.ts" />
/// <reference path="./observable.ts" />
/// <reference path="./observer-lite.ts" />
var Rx;
(function (Rx) {
})(Rx || (Rx = {}));
(function () {
    var notification = new Rx.Notification(undefined, undefined, undefined, undefined, undefined, undefined);
    var observer;
    notification.accept(observer);
    notification.accept(function (n) { return n.toString(); }, function (e) { return e; }, function () { return false.toString(); });
    var observable = notification.toObservable();
    var observable = notification.toObservable(Rx.Scheduler.currentThread);
    Rx.Notification.createOnNext(function () { return true; });
    Rx.Notification.createOnError(new Error('a'));
    Rx.Notification.createOnCompleted();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGxhdGZvcm1zL2lvcy9idWlsZC9EZWJ1Zy1pcGhvbmVzaW11bGF0b3IvQ2hhdHZlcnNpdHlBcHAuYXBwL2FwcC90bnNfbW9kdWxlcy9yeC90cy9jb3JlL25vdGlmaWNhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvREFBb0Q7QUFDcEQsbURBQW1EO0FBQ25ELHdDQUF3QztBQUN4QywyQ0FBMkM7QUFDM0MsSUFBTyxFQUFFLENBaUVSO0FBakVELFdBQU8sRUFBRTtBQWlFVCxDQUFDLEVBakVNLEVBQUUsS0FBRixFQUFFLFFBaUVSO0FBR0QsQ0FBQztJQUNHLElBQUksWUFBWSxHQUE0QixJQUFJLEVBQUUsQ0FBQyxZQUFZLENBQVMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUUxSSxJQUFJLFFBQThCLENBQUM7SUFDbkMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QixZQUFZLENBQUMsTUFBTSxDQUFDLFVBQUMsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFaLENBQVksRUFBRSxVQUFDLENBQUMsSUFBSyxPQUFBLENBQUMsRUFBRCxDQUFDLEVBQUUsY0FBTSxPQUFBLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBaEIsQ0FBZ0IsQ0FBQyxDQUFDO0lBRTNFLElBQUksVUFBVSxHQUEwQixZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDcEUsSUFBSSxVQUFVLEdBQTBCLFlBQVksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUU5RixFQUFFLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxjQUFNLE9BQUEsSUFBSSxFQUFKLENBQUksQ0FBQyxDQUFDO0lBQ3pDLEVBQUUsQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDOUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQ3hDLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vZGlzcG9zYWJsZXMvZGlzcG9zYWJsZS50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9jb25jdXJyZW5jeS9zY2hlZHVsZXIudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vb2JzZXJ2YWJsZS50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9vYnNlcnZlci1saXRlLnRzXCIgLz5cbm1vZHVsZSBSeCB7XG4gICAgLyoqXG4gICAgICogIFJlcHJlc2VudHMgYSBub3RpZmljYXRpb24gdG8gYW4gb2JzZXJ2ZXIuXG4gICAgICovXG4gICAgZXhwb3J0IGludGVyZmFjZSBOb3RpZmljYXRpb248VD4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogSW52b2tlcyB0aGUgZGVsZWdhdGUgY29ycmVzcG9uZGluZyB0byB0aGUgbm90aWZpY2F0aW9uIG9yIHRoZSBvYnNlcnZlcidzIG1ldGhvZCBjb3JyZXNwb25kaW5nIHRvIHRoZSBub3RpZmljYXRpb24gYW5kIHJldHVybnMgdGhlIHByb2R1Y2VkIHJlc3VsdC5cbiAgICAgICAgICpcbiAgICAgICAgICogQG1lbWJlck9mIE5vdGlmaWNhdGlvblxuICAgICAgICAgKiBAcGFyYW0ge0FueX0gb2JzZXJ2ZXJPck9uTmV4dCBEZWxlZ2F0ZSB0byBpbnZva2UgZm9yIGFuIE9uTmV4dCBub3RpZmljYXRpb24gb3IgT2JzZXJ2ZXIgdG8gaW52b2tlIHRoZSBub3RpZmljYXRpb24gb24uLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkVycm9yIERlbGVnYXRlIHRvIGludm9rZSBmb3IgYW4gT25FcnJvciBub3RpZmljYXRpb24uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IG9uQ29tcGxldGVkIERlbGVnYXRlIHRvIGludm9rZSBmb3IgYW4gT25Db21wbGV0ZWQgbm90aWZpY2F0aW9uLlxuICAgICAgICAgKiBAcmV0dXJucyB7QW55fSBSZXN1bHQgcHJvZHVjZWQgYnkgdGhlIG9ic2VydmF0aW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgYWNjZXB0KG9ic2VydmVyOiBJT2JzZXJ2ZXI8VD4pOiB2b2lkO1xuICAgICAgICAvKipcbiAgICAgICAgICogSW52b2tlcyB0aGUgZGVsZWdhdGUgY29ycmVzcG9uZGluZyB0byB0aGUgbm90aWZpY2F0aW9uIG9yIHRoZSBvYnNlcnZlcidzIG1ldGhvZCBjb3JyZXNwb25kaW5nIHRvIHRoZSBub3RpZmljYXRpb24gYW5kIHJldHVybnMgdGhlIHByb2R1Y2VkIHJlc3VsdC5cbiAgICAgICAgICpcbiAgICAgICAgICogQG1lbWJlck9mIE5vdGlmaWNhdGlvblxuICAgICAgICAgKiBAcGFyYW0ge0FueX0gb2JzZXJ2ZXJPck9uTmV4dCBEZWxlZ2F0ZSB0byBpbnZva2UgZm9yIGFuIE9uTmV4dCBub3RpZmljYXRpb24gb3IgT2JzZXJ2ZXIgdG8gaW52b2tlIHRoZSBub3RpZmljYXRpb24gb24uLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkVycm9yIERlbGVnYXRlIHRvIGludm9rZSBmb3IgYW4gT25FcnJvciBub3RpZmljYXRpb24uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IG9uQ29tcGxldGVkIERlbGVnYXRlIHRvIGludm9rZSBmb3IgYW4gT25Db21wbGV0ZWQgbm90aWZpY2F0aW9uLlxuICAgICAgICAgKiBAcmV0dXJucyB7QW55fSBSZXN1bHQgcHJvZHVjZWQgYnkgdGhlIG9ic2VydmF0aW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgYWNjZXB0PFRSZXN1bHQ+KG9uTmV4dDogKHZhbHVlOiBUKSA9PiBUUmVzdWx0LCBvbkVycm9yOiAoZXhjZXB0aW9uOiBhbnkpID0+IFRSZXN1bHQsIG9uQ29tcGxldGVkOiAoKSA9PiBUUmVzdWx0KTogVFJlc3VsdDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyBhbiBvYnNlcnZhYmxlIHNlcXVlbmNlIHdpdGggYSBzaW5nbGUgbm90aWZpY2F0aW9uLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAbWVtYmVyT2YgTm90aWZpY2F0aW9uc1xuICAgICAgICAgKiBAcGFyYW0ge1NjaGVkdWxlcn0gW3NjaGVkdWxlcl0gU2NoZWR1bGVyIHRvIHNlbmQgb3V0IHRoZSBub3RpZmljYXRpb24gY2FsbHMgb24uXG4gICAgICAgICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlfSBUaGUgb2JzZXJ2YWJsZSBzZXF1ZW5jZSB0aGF0IHN1cmZhY2VzIHRoZSBiZWhhdmlvciBvZiB0aGUgbm90aWZpY2F0aW9uIHVwb24gc3Vic2NyaXB0aW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdG9PYnNlcnZhYmxlKHNjaGVkdWxlcj86IElTY2hlZHVsZXIpOiBPYnNlcnZhYmxlPFQ+O1xuXG4gICAgICAgIGhhc1ZhbHVlOiBib29sZWFuO1xuICAgICAgICBlcXVhbHMob3RoZXI6IE5vdGlmaWNhdGlvbjxUPik6IGJvb2xlYW47XG4gICAgICAgIGtpbmQ6IHN0cmluZztcbiAgICAgICAgdmFsdWU6IFQ7XG4gICAgICAgIGVycm9yOiBhbnk7XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIE5vdGlmaWNhdGlvblN0YXRpYyB7XG4gICAgICAgIG5ldyA8VD4oa2luZDogYW55LCB2YWx1ZTogYW55LCBleGNlcHRpb246IGFueSwgYWNjZXB0OiBhbnksIGFjY2VwdE9ic2VydmFibGU6IGFueSwgdG9TdHJpbmc6IGFueSkgOiBOb3RpZmljYXRpb248VD47XG5cbiAgICAgICAgLyoqXG4gICAgICAgICogQ3JlYXRlcyBhbiBvYmplY3QgdGhhdCByZXByZXNlbnRzIGFuIE9uTmV4dCBub3RpZmljYXRpb24gdG8gYW4gb2JzZXJ2ZXIuXG4gICAgICAgICogQHBhcmFtIHtBbnl9IHZhbHVlIFRoZSB2YWx1ZSBjb250YWluZWQgaW4gdGhlIG5vdGlmaWNhdGlvbi5cbiAgICAgICAgKiBAcmV0dXJucyB7Tm90aWZpY2F0aW9ufSBUaGUgT25OZXh0IG5vdGlmaWNhdGlvbiBjb250YWluaW5nIHRoZSB2YWx1ZS5cbiAgICAgICAgKi9cbiAgICAgICAgY3JlYXRlT25OZXh0PFQ+KHZhbHVlOiBUKTogTm90aWZpY2F0aW9uPFQ+O1xuICAgICAgICAvKipcbiAgICAgICAgKiBDcmVhdGVzIGFuIG9iamVjdCB0aGF0IHJlcHJlc2VudHMgYW4gT25FcnJvciBub3RpZmljYXRpb24gdG8gYW4gb2JzZXJ2ZXIuXG4gICAgICAgICogQHBhcmFtIHtBbnl9IGVycm9yIFRoZSBleGNlcHRpb24gY29udGFpbmVkIGluIHRoZSBub3RpZmljYXRpb24uXG4gICAgICAgICogQHJldHVybnMge05vdGlmaWNhdGlvbn0gVGhlIE9uRXJyb3Igbm90aWZpY2F0aW9uIGNvbnRhaW5pbmcgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgKi9cbiAgICAgICAgY3JlYXRlT25FcnJvcjxUPihleGNlcHRpb246IGFueSk6IE5vdGlmaWNhdGlvbjxUPjtcbiAgICAgICAgLyoqXG4gICAgICAgICogQ3JlYXRlcyBhbiBvYmplY3QgdGhhdCByZXByZXNlbnRzIGFuIE9uQ29tcGxldGVkIG5vdGlmaWNhdGlvbiB0byBhbiBvYnNlcnZlci5cbiAgICAgICAgKiBAcmV0dXJucyB7Tm90aWZpY2F0aW9ufSBUaGUgT25Db21wbGV0ZWQgbm90aWZpY2F0aW9uLlxuICAgICAgICAqL1xuICAgICAgICBjcmVhdGVPbkNvbXBsZXRlZDxUPigpOiBOb3RpZmljYXRpb248VD47XG4gICAgfVxuXG4gICAgZXhwb3J0IHZhciBOb3RpZmljYXRpb24gOiBOb3RpZmljYXRpb25TdGF0aWM7XG59XG5cblxuKGZ1bmN0aW9uKCkge1xuICAgIHZhciBub3RpZmljYXRpb246IFJ4Lk5vdGlmaWNhdGlvbjxudW1iZXI+ID0gbmV3IFJ4Lk5vdGlmaWNhdGlvbjxudW1iZXI+KHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpO1xuXG4gICAgdmFyIG9ic2VydmVyOiBSeC5JT2JzZXJ2ZXI8bnVtYmVyPjtcbiAgICBub3RpZmljYXRpb24uYWNjZXB0KG9ic2VydmVyKTtcbiAgICBub3RpZmljYXRpb24uYWNjZXB0KChuKSA9PiBuLnRvU3RyaW5nKCksIChlKSA9PiBlLCAoKSA9PiBmYWxzZS50b1N0cmluZygpKTtcblxuICAgIHZhciBvYnNlcnZhYmxlOiBSeC5PYnNlcnZhYmxlPG51bWJlcj4gPSBub3RpZmljYXRpb24udG9PYnNlcnZhYmxlKCk7XG4gICAgdmFyIG9ic2VydmFibGU6IFJ4Lk9ic2VydmFibGU8bnVtYmVyPiA9IG5vdGlmaWNhdGlvbi50b09ic2VydmFibGUoUnguU2NoZWR1bGVyLmN1cnJlbnRUaHJlYWQpO1xuXG4gICAgUnguTm90aWZpY2F0aW9uLmNyZWF0ZU9uTmV4dCgoKSA9PiB0cnVlKTtcbiAgICBSeC5Ob3RpZmljYXRpb24uY3JlYXRlT25FcnJvcihuZXcgRXJyb3IoJ2EnKSk7XG4gICAgUnguTm90aWZpY2F0aW9uLmNyZWF0ZU9uQ29tcGxldGVkKCk7XG59KTtcbiJdfQ==