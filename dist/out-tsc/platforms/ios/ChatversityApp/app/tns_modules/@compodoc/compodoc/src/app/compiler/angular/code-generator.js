"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ts_simple_ast_1 = require("ts-simple-ast");
var CodeGenerator = /** @class */ (function () {
    function CodeGenerator() {
    }
    CodeGenerator.prototype.generate = function (node) {
        return this.visitAndRecognize(node, []).join('');
    };
    CodeGenerator.prototype.visitAndRecognize = function (node, code, depth) {
        var _this = this;
        if (depth === void 0) { depth = 0; }
        this.recognize(node, code);
        node.getChildren().forEach(function (c) { return _this.visitAndRecognize(c, code, depth + 1); });
        return code;
    };
    CodeGenerator.prototype.recognize = function (node, code) {
        var _this = this;
        var conversion = TsKindConversion.find(function (x) { return x.kinds.some(function (z) { return z === node.kind; }); });
        if (conversion) {
            var result = conversion.output(node);
            result.forEach(function (text) { return _this.gen(text, code); });
        }
    };
    CodeGenerator.prototype.gen = function (token, code) {
        if (!token) {
            return;
        }
        if (token === '\n') {
            code.push('');
        }
        else {
            code.push(token);
        }
    };
    return CodeGenerator;
}());
exports.CodeGenerator = CodeGenerator;
var TsKindsToText = /** @class */ (function () {
    function TsKindsToText(output, kinds) {
        this.output = output;
        this.kinds = kinds;
    }
    return TsKindsToText;
}());
var TsKindConversion = [
    new TsKindsToText(function (node) { return ['"', node.text, '"']; }, [
        ts_simple_ast_1.SyntaxKind.FirstLiteralToken,
        ts_simple_ast_1.SyntaxKind.Identifier
    ]),
    new TsKindsToText(function (node) { return ['"', node.text, '"']; }, [ts_simple_ast_1.SyntaxKind.StringLiteral]),
    new TsKindsToText(function (node) { return []; }, [ts_simple_ast_1.SyntaxKind.ArrayLiteralExpression]),
    new TsKindsToText(function (node) { return ['import', ' ']; }, [ts_simple_ast_1.SyntaxKind.ImportKeyword]),
    new TsKindsToText(function (node) { return ['from', ' ']; }, [ts_simple_ast_1.SyntaxKind.FromKeyword]),
    new TsKindsToText(function (node) { return ['\n', 'export', ' ']; }, [ts_simple_ast_1.SyntaxKind.ExportKeyword]),
    new TsKindsToText(function (node) { return ['class', ' ']; }, [ts_simple_ast_1.SyntaxKind.ClassKeyword]),
    new TsKindsToText(function (node) { return ['this']; }, [ts_simple_ast_1.SyntaxKind.ThisKeyword]),
    new TsKindsToText(function (node) { return ['constructor']; }, [ts_simple_ast_1.SyntaxKind.ConstructorKeyword]),
    new TsKindsToText(function (node) { return ['false']; }, [ts_simple_ast_1.SyntaxKind.FalseKeyword]),
    new TsKindsToText(function (node) { return ['true']; }, [ts_simple_ast_1.SyntaxKind.TrueKeyword]),
    new TsKindsToText(function (node) { return ['null']; }, [ts_simple_ast_1.SyntaxKind.NullKeyword]),
    new TsKindsToText(function (node) { return []; }, [ts_simple_ast_1.SyntaxKind.AtToken]),
    new TsKindsToText(function (node) { return ['+']; }, [ts_simple_ast_1.SyntaxKind.PlusToken]),
    new TsKindsToText(function (node) { return [' => ']; }, [ts_simple_ast_1.SyntaxKind.EqualsGreaterThanToken]),
    new TsKindsToText(function (node) { return ['(']; }, [ts_simple_ast_1.SyntaxKind.OpenParenToken]),
    new TsKindsToText(function (node) { return ['{', ' ']; }, [
        ts_simple_ast_1.SyntaxKind.ImportClause,
        ts_simple_ast_1.SyntaxKind.ObjectLiteralExpression
    ]),
    new TsKindsToText(function (node) { return ['{', '\n']; }, [ts_simple_ast_1.SyntaxKind.Block]),
    new TsKindsToText(function (node) { return ['}']; }, [ts_simple_ast_1.SyntaxKind.CloseBraceToken]),
    new TsKindsToText(function (node) { return [')']; }, [ts_simple_ast_1.SyntaxKind.CloseParenToken]),
    new TsKindsToText(function (node) { return ['[']; }, [ts_simple_ast_1.SyntaxKind.OpenBracketToken]),
    new TsKindsToText(function (node) { return [']']; }, [ts_simple_ast_1.SyntaxKind.CloseBracketToken]),
    new TsKindsToText(function (node) { return [';', '\n']; }, [ts_simple_ast_1.SyntaxKind.SemicolonToken]),
    new TsKindsToText(function (node) { return [',', ' ']; }, [ts_simple_ast_1.SyntaxKind.CommaToken]),
    new TsKindsToText(function (node) { return [' ', ':', ' ']; }, [ts_simple_ast_1.SyntaxKind.ColonToken]),
    new TsKindsToText(function (node) { return ['.']; }, [ts_simple_ast_1.SyntaxKind.DotToken]),
    new TsKindsToText(function (node) { return []; }, [ts_simple_ast_1.SyntaxKind.DoStatement]),
    new TsKindsToText(function (node) { return []; }, [ts_simple_ast_1.SyntaxKind.Decorator]),
    new TsKindsToText(function (node) { return [' = ']; }, [ts_simple_ast_1.SyntaxKind.FirstAssignment]),
    new TsKindsToText(function (node) { return [' ']; }, [ts_simple_ast_1.SyntaxKind.FirstPunctuation]),
    new TsKindsToText(function (node) { return ['private', ' ']; }, [ts_simple_ast_1.SyntaxKind.PrivateKeyword]),
    new TsKindsToText(function (node) { return ['public', ' ']; }, [ts_simple_ast_1.SyntaxKind.PublicKeyword])
];
//# sourceMappingURL=data:application/json;base64,