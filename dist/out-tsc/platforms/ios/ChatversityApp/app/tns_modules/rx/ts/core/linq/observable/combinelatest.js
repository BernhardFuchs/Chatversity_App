/// <reference path="../../observable.ts" />
(function () {
    var o;
    var io;
    var so;
    var p;
    var r = Rx.Observable.combineLatest(o, io, p, so, function (vo, vio, vp, vso) { return ({ vo: vo, vio: vio, vp: vp, vso: vso }); });
    var rr = Rx.Observable.combineLatest([o, io, so, p], function (items) { return 5; });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZWxhdGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BsYXRmb3Jtcy9pb3MvQ2hhdHZlcnNpdHlBcHAvYXBwL3Ruc19tb2R1bGVzL3J4L3RzL2NvcmUvbGlucS9vYnNlcnZhYmxlL2NvbWJpbmVsYXRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNENBQTRDO0FBdUY1QyxDQUFDO0lBQ0csSUFBSSxDQUF5QixDQUFDO0lBQzlCLElBQUksRUFBMEIsQ0FBQztJQUMvQixJQUFJLEVBQXNCLENBQUM7SUFDM0IsSUFBSSxDQUE0QixDQUFDO0lBRWpDLElBQUksQ0FBQyxHQUFnRixFQUFFLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsVUFBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLElBQUssT0FBQSxDQUFDLEVBQUUsRUFBRSxJQUFBLEVBQUUsR0FBRyxLQUFBLEVBQUUsRUFBRSxJQUFBLEVBQUUsR0FBRyxLQUFBLEVBQUUsQ0FBQyxFQUF0QixDQUFzQixDQUFDLENBQUM7SUFFN0ssSUFBSSxFQUFFLEdBQTJCLEVBQUUsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsVUFBQyxLQUFLLElBQUssT0FBQSxDQUFDLEVBQUQsQ0FBQyxDQUFDLENBQUM7QUFDdEcsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vb2JzZXJ2YWJsZS50c1wiIC8+XG5tb2R1bGUgUngge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgT2JzZXJ2YWJsZVN0YXRpYyB7XG4gICAgICAgIC8qKlxuICAgICAgICAqIE1lcmdlcyB0aGUgc3BlY2lmaWVkIG9ic2VydmFibGUgc2VxdWVuY2VzIGludG8gb25lIG9ic2VydmFibGUgc2VxdWVuY2UgYnkgdXNpbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHdoZW5ldmVyIGFueSBvZiB0aGUgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgb3IgUHJvbWlzZXMgcHJvZHVjZXMgYW4gZWxlbWVudC5cbiAgICAgICAgKlxuICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICogMSAtIG9icyA9IFJ4Lk9ic2VydmFibGUuY29tYmluZUxhdGVzdChvYnMxLCBvYnMyLCBvYnMzLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiAyIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KFtvYnMxLCBvYnMyLCBvYnMzXSwgZnVuY3Rpb24gKG8xLCBvMiwgbzMpIHsgcmV0dXJuIG8xICsgbzIgKyBvMzsgfSk7XG4gICAgICAgICogQHJldHVybnMge09ic2VydmFibGV9IEFuIG9ic2VydmFibGUgc2VxdWVuY2UgY29udGFpbmluZyB0aGUgcmVzdWx0IG9mIGNvbWJpbmluZyBlbGVtZW50cyBvZiB0aGUgc291cmNlcyB1c2luZyB0aGUgc3BlY2lmaWVkIHJlc3VsdCBzZWxlY3RvciBmdW5jdGlvbi5cbiAgICAgICAgKi9cbiAgICAgICAgY29tYmluZUxhdGVzdDxULCBUMiwgVFJlc3VsdD4oZmlyc3Q6IE9ic2VydmFibGVPclByb21pc2U8VD4sIHNlY29uZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMj4sIHJlc3VsdFNlbGVjdG9yOiAodjE6IFQsIHYyOiBUMikgPT4gVFJlc3VsdCk6IE9ic2VydmFibGU8VFJlc3VsdD47XG4gICAgICAgIC8qKlxuICAgICAgICAqIE1lcmdlcyB0aGUgc3BlY2lmaWVkIG9ic2VydmFibGUgc2VxdWVuY2VzIGludG8gb25lIG9ic2VydmFibGUgc2VxdWVuY2UgYnkgdXNpbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHdoZW5ldmVyIGFueSBvZiB0aGUgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgb3IgUHJvbWlzZXMgcHJvZHVjZXMgYW4gZWxlbWVudC5cbiAgICAgICAgKlxuICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICogMSAtIG9icyA9IFJ4Lk9ic2VydmFibGUuY29tYmluZUxhdGVzdChvYnMxLCBvYnMyLCBvYnMzLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiAyIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KFtvYnMxLCBvYnMyLCBvYnMzXSwgZnVuY3Rpb24gKG8xLCBvMiwgbzMpIHsgcmV0dXJuIG8xICsgbzIgKyBvMzsgfSk7XG4gICAgICAgICogQHJldHVybnMge09ic2VydmFibGV9IEFuIG9ic2VydmFibGUgc2VxdWVuY2UgY29udGFpbmluZyB0aGUgcmVzdWx0IG9mIGNvbWJpbmluZyBlbGVtZW50cyBvZiB0aGUgc291cmNlcyB1c2luZyB0aGUgc3BlY2lmaWVkIHJlc3VsdCBzZWxlY3RvciBmdW5jdGlvbi5cbiAgICAgICAgKi9cbiAgICAgICAgY29tYmluZUxhdGVzdDxULCBUMiwgVDMsIFRSZXN1bHQ+KGZpcnN0OiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ+LCBzZWNvbmQ6IE9ic2VydmFibGVPclByb21pc2U8VDI+LCB0aGlyZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMz4sIHJlc3VsdFNlbGVjdG9yOiAodjE6IFQsIHYyOiBUMiwgdjM6IFQzKSA9PiBUUmVzdWx0KTogT2JzZXJ2YWJsZTxUUmVzdWx0PjtcbiAgICAgICAgLyoqXG4gICAgICAgICogTWVyZ2VzIHRoZSBzcGVjaWZpZWQgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgaW50byBvbmUgb2JzZXJ2YWJsZSBzZXF1ZW5jZSBieSB1c2luZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gd2hlbmV2ZXIgYW55IG9mIHRoZSBvYnNlcnZhYmxlIHNlcXVlbmNlcyBvciBQcm9taXNlcyBwcm9kdWNlcyBhbiBlbGVtZW50LlxuICAgICAgICAqXG4gICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgKiAxIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KG9iczEsIG9iczIsIG9iczMsIGZ1bmN0aW9uIChvMSwgbzIsIG8zKSB7IHJldHVybiBvMSArIG8yICsgbzM7IH0pO1xuICAgICAgICAqIDIgLSBvYnMgPSBSeC5PYnNlcnZhYmxlLmNvbWJpbmVMYXRlc3QoW29iczEsIG9iczIsIG9iczNdLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZX0gQW4gb2JzZXJ2YWJsZSBzZXF1ZW5jZSBjb250YWluaW5nIHRoZSByZXN1bHQgb2YgY29tYmluaW5nIGVsZW1lbnRzIG9mIHRoZSBzb3VyY2VzIHVzaW5nIHRoZSBzcGVjaWZpZWQgcmVzdWx0IHNlbGVjdG9yIGZ1bmN0aW9uLlxuICAgICAgICAqL1xuICAgICAgICBjb21iaW5lTGF0ZXN0PFQsIFQyLCBUMywgVDQsIFRSZXN1bHQ+KGZpcnN0OiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ+LCBzZWNvbmQ6IE9ic2VydmFibGVPclByb21pc2U8VDI+LCB0aGlyZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMz4sIGZvdXJ0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUND4sIHJlc3VsdFNlbGVjdG9yOiAodjE6IFQsIHYyOiBUMiwgdjM6IFQzLCB2NDogVDQpID0+IFRSZXN1bHQpOiBPYnNlcnZhYmxlPFRSZXN1bHQ+O1xuICAgICAgICAvKipcbiAgICAgICAgKiBNZXJnZXMgdGhlIHNwZWNpZmllZCBvYnNlcnZhYmxlIHNlcXVlbmNlcyBpbnRvIG9uZSBvYnNlcnZhYmxlIHNlcXVlbmNlIGJ5IHVzaW5nIHRoZSBzZWxlY3RvciBmdW5jdGlvbiB3aGVuZXZlciBhbnkgb2YgdGhlIG9ic2VydmFibGUgc2VxdWVuY2VzIG9yIFByb21pc2VzIHByb2R1Y2VzIGFuIGVsZW1lbnQuXG4gICAgICAgICpcbiAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAqIDEgLSBvYnMgPSBSeC5PYnNlcnZhYmxlLmNvbWJpbmVMYXRlc3Qob2JzMSwgb2JzMiwgb2JzMywgZnVuY3Rpb24gKG8xLCBvMiwgbzMpIHsgcmV0dXJuIG8xICsgbzIgKyBvMzsgfSk7XG4gICAgICAgICogMiAtIG9icyA9IFJ4Lk9ic2VydmFibGUuY29tYmluZUxhdGVzdChbb2JzMSwgb2JzMiwgb2JzM10sIGZ1bmN0aW9uIChvMSwgbzIsIG8zKSB7IHJldHVybiBvMSArIG8yICsgbzM7IH0pO1xuICAgICAgICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlfSBBbiBvYnNlcnZhYmxlIHNlcXVlbmNlIGNvbnRhaW5pbmcgdGhlIHJlc3VsdCBvZiBjb21iaW5pbmcgZWxlbWVudHMgb2YgdGhlIHNvdXJjZXMgdXNpbmcgdGhlIHNwZWNpZmllZCByZXN1bHQgc2VsZWN0b3IgZnVuY3Rpb24uXG4gICAgICAgICovXG4gICAgICAgIGNvbWJpbmVMYXRlc3Q8VCwgVDIsIFQzLCBUNCwgVDUsIFRSZXN1bHQ+KGZpcnN0OiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ+LCBzZWNvbmQ6IE9ic2VydmFibGVPclByb21pc2U8VDI+LCB0aGlyZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMz4sIGZvdXJ0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUND4sIGZpZnRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ1PiwgcmVzdWx0U2VsZWN0b3I6ICh2MTogVCwgdjI6IFQyLCB2MzogVDMsIHY0OiBUNCwgdjU6IFQ1KSA9PiBUUmVzdWx0KTogT2JzZXJ2YWJsZTxUUmVzdWx0PjtcbiAgICAgICAgLyoqXG4gICAgICAgICogTWVyZ2VzIHRoZSBzcGVjaWZpZWQgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgaW50byBvbmUgb2JzZXJ2YWJsZSBzZXF1ZW5jZSBieSB1c2luZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gd2hlbmV2ZXIgYW55IG9mIHRoZSBvYnNlcnZhYmxlIHNlcXVlbmNlcyBvciBQcm9taXNlcyBwcm9kdWNlcyBhbiBlbGVtZW50LlxuICAgICAgICAqXG4gICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgKiAxIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KG9iczEsIG9iczIsIG9iczMsIGZ1bmN0aW9uIChvMSwgbzIsIG8zKSB7IHJldHVybiBvMSArIG8yICsgbzM7IH0pO1xuICAgICAgICAqIDIgLSBvYnMgPSBSeC5PYnNlcnZhYmxlLmNvbWJpbmVMYXRlc3QoW29iczEsIG9iczIsIG9iczNdLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZX0gQW4gb2JzZXJ2YWJsZSBzZXF1ZW5jZSBjb250YWluaW5nIHRoZSByZXN1bHQgb2YgY29tYmluaW5nIGVsZW1lbnRzIG9mIHRoZSBzb3VyY2VzIHVzaW5nIHRoZSBzcGVjaWZpZWQgcmVzdWx0IHNlbGVjdG9yIGZ1bmN0aW9uLlxuICAgICAgICAqL1xuICAgICAgICBjb21iaW5lTGF0ZXN0PFQsIFQyLCBUMywgVDQsIFQ1LCBUNiwgVFJlc3VsdD4oZmlyc3Q6IE9ic2VydmFibGVPclByb21pc2U8VD4sIHNlY29uZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMj4sIHRoaXJkOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQzPiwgZm91cnRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ0PiwgZmlmdGg6IE9ic2VydmFibGVPclByb21pc2U8VDU+LCBzaXh0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUNj4sIHJlc3VsdFNlbGVjdG9yOiAodjE6IFQsIHYyOiBUMiwgdjM6IFQzLCB2NDogVDQsIHY1OiBUNSwgdjY6IFQ2KSA9PiBUUmVzdWx0KTogT2JzZXJ2YWJsZTxUUmVzdWx0PjtcbiAgICAgICAgLyoqXG4gICAgICAgICogTWVyZ2VzIHRoZSBzcGVjaWZpZWQgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgaW50byBvbmUgb2JzZXJ2YWJsZSBzZXF1ZW5jZSBieSB1c2luZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gd2hlbmV2ZXIgYW55IG9mIHRoZSBvYnNlcnZhYmxlIHNlcXVlbmNlcyBvciBQcm9taXNlcyBwcm9kdWNlcyBhbiBlbGVtZW50LlxuICAgICAgICAqXG4gICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgKiAxIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KG9iczEsIG9iczIsIG9iczMsIGZ1bmN0aW9uIChvMSwgbzIsIG8zKSB7IHJldHVybiBvMSArIG8yICsgbzM7IH0pO1xuICAgICAgICAqIDIgLSBvYnMgPSBSeC5PYnNlcnZhYmxlLmNvbWJpbmVMYXRlc3QoW29iczEsIG9iczIsIG9iczNdLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZX0gQW4gb2JzZXJ2YWJsZSBzZXF1ZW5jZSBjb250YWluaW5nIHRoZSByZXN1bHQgb2YgY29tYmluaW5nIGVsZW1lbnRzIG9mIHRoZSBzb3VyY2VzIHVzaW5nIHRoZSBzcGVjaWZpZWQgcmVzdWx0IHNlbGVjdG9yIGZ1bmN0aW9uLlxuICAgICAgICAqL1xuICAgICAgICBjb21iaW5lTGF0ZXN0PFQsIFQyLCBUMywgVDQsIFQ1LCBUNiwgVDcsIFRSZXN1bHQ+KGZpcnN0OiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ+LCBzZWNvbmQ6IE9ic2VydmFibGVPclByb21pc2U8VDI+LCB0aGlyZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMz4sIGZvdXJ0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUND4sIGZpZnRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ1Piwgc2l4dGg6IE9ic2VydmFibGVPclByb21pc2U8VDY+LCBldmVudGg6IE9ic2VydmFibGVPclByb21pc2U8VDc+LCByZXN1bHRTZWxlY3RvcjogKHYxOiBULCB2MjogVDIsIHYzOiBUMywgdjQ6IFQ0LCB2NTogVDUsIHY2OiBUNiwgdjc6IFQ3KSA9PiBUUmVzdWx0KTogT2JzZXJ2YWJsZTxUUmVzdWx0PjtcbiAgICAgICAgLyoqXG4gICAgICAgICogTWVyZ2VzIHRoZSBzcGVjaWZpZWQgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgaW50byBvbmUgb2JzZXJ2YWJsZSBzZXF1ZW5jZSBieSB1c2luZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gd2hlbmV2ZXIgYW55IG9mIHRoZSBvYnNlcnZhYmxlIHNlcXVlbmNlcyBvciBQcm9taXNlcyBwcm9kdWNlcyBhbiBlbGVtZW50LlxuICAgICAgICAqXG4gICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgKiAxIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KG9iczEsIG9iczIsIG9iczMsIGZ1bmN0aW9uIChvMSwgbzIsIG8zKSB7IHJldHVybiBvMSArIG8yICsgbzM7IH0pO1xuICAgICAgICAqIDIgLSBvYnMgPSBSeC5PYnNlcnZhYmxlLmNvbWJpbmVMYXRlc3QoW29iczEsIG9iczIsIG9iczNdLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZX0gQW4gb2JzZXJ2YWJsZSBzZXF1ZW5jZSBjb250YWluaW5nIHRoZSByZXN1bHQgb2YgY29tYmluaW5nIGVsZW1lbnRzIG9mIHRoZSBzb3VyY2VzIHVzaW5nIHRoZSBzcGVjaWZpZWQgcmVzdWx0IHNlbGVjdG9yIGZ1bmN0aW9uLlxuICAgICAgICAqL1xuICAgICAgICBjb21iaW5lTGF0ZXN0PFQsIFQyLCBUMywgVDQsIFQ1LCBUNiwgVDcsIFQ4LCBUUmVzdWx0PihmaXJzdDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUPiwgc2Vjb25kOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQyPiwgdGhpcmQ6IE9ic2VydmFibGVPclByb21pc2U8VDM+LCBmb3VydGg6IE9ic2VydmFibGVPclByb21pc2U8VDQ+LCBmaWZ0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUNT4sIHNpeHRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ2Piwgc2V2ZW50aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUNz4sIGVpZ2h0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUOD4sIHJlc3VsdFNlbGVjdG9yOiAodjE6IFQsIHYyOiBUMiwgdjM6IFQzLCB2NDogVDQsIHY1OiBUNSwgdjY6IFQ2LCB2NzogVDcsIHY4OiBUOCkgPT4gVFJlc3VsdCk6IE9ic2VydmFibGU8VFJlc3VsdD47XG4gICAgICAgIC8qKlxuICAgICAgICAqIE1lcmdlcyB0aGUgc3BlY2lmaWVkIG9ic2VydmFibGUgc2VxdWVuY2VzIGludG8gb25lIG9ic2VydmFibGUgc2VxdWVuY2UgYnkgdXNpbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHdoZW5ldmVyIGFueSBvZiB0aGUgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgb3IgUHJvbWlzZXMgcHJvZHVjZXMgYW4gZWxlbWVudC5cbiAgICAgICAgKlxuICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICogMSAtIG9icyA9IFJ4Lk9ic2VydmFibGUuY29tYmluZUxhdGVzdChvYnMxLCBvYnMyLCBvYnMzLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiAyIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KFtvYnMxLCBvYnMyLCBvYnMzXSwgZnVuY3Rpb24gKG8xLCBvMiwgbzMpIHsgcmV0dXJuIG8xICsgbzIgKyBvMzsgfSk7XG4gICAgICAgICogQHJldHVybnMge09ic2VydmFibGV9IEFuIG9ic2VydmFibGUgc2VxdWVuY2UgY29udGFpbmluZyB0aGUgcmVzdWx0IG9mIGNvbWJpbmluZyBlbGVtZW50cyBvZiB0aGUgc291cmNlcyB1c2luZyB0aGUgc3BlY2lmaWVkIHJlc3VsdCBzZWxlY3RvciBmdW5jdGlvbi5cbiAgICAgICAgKi9cbiAgICAgICAgY29tYmluZUxhdGVzdDxULCBUMiwgVDMsIFQ0LCBUNSwgVDYsIFQ3LCBUOCwgVDksIFRSZXN1bHQ+KGZpcnN0OiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ+LCBzZWNvbmQ6IE9ic2VydmFibGVPclByb21pc2U8VDI+LCB0aGlyZDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUMz4sIGZvdXJ0aDogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUND4sIGZpZnRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ1Piwgc2l4dGg6IE9ic2VydmFibGVPclByb21pc2U8VDY+LCBzZXZlbnRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ3PiwgZWlnaHRoOiBPYnNlcnZhYmxlT3JQcm9taXNlPFQ4PiwgbmludGg6IE9ic2VydmFibGVPclByb21pc2U8VDk+LCByZXN1bHRTZWxlY3RvcjogKHYxOiBULCB2MjogVDIsIHYzOiBUMywgdjQ6IFQ0LCB2NTogVDUsIHY2OiBUNiwgdjc6IFQ3LCB2ODogVDgsIHY5OiBUOSkgPT4gVFJlc3VsdCk6IE9ic2VydmFibGU8VFJlc3VsdD47XG4gICAgICAgIC8qKlxuICAgICAgICAqIE1lcmdlcyB0aGUgc3BlY2lmaWVkIG9ic2VydmFibGUgc2VxdWVuY2VzIGludG8gb25lIG9ic2VydmFibGUgc2VxdWVuY2UgYnkgdXNpbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHdoZW5ldmVyIGFueSBvZiB0aGUgb2JzZXJ2YWJsZSBzZXF1ZW5jZXMgb3IgUHJvbWlzZXMgcHJvZHVjZXMgYW4gZWxlbWVudC5cbiAgICAgICAgKlxuICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICogMSAtIG9icyA9IFJ4Lk9ic2VydmFibGUuY29tYmluZUxhdGVzdChvYnMxLCBvYnMyLCBvYnMzLCBmdW5jdGlvbiAobzEsIG8yLCBvMykgeyByZXR1cm4gbzEgKyBvMiArIG8zOyB9KTtcbiAgICAgICAgKiAyIC0gb2JzID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KFtvYnMxLCBvYnMyLCBvYnMzXSwgZnVuY3Rpb24gKG8xLCBvMiwgbzMpIHsgcmV0dXJuIG8xICsgbzIgKyBvMzsgfSk7XG4gICAgICAgICogQHJldHVybnMge09ic2VydmFibGV9IEFuIG9ic2VydmFibGUgc2VxdWVuY2UgY29udGFpbmluZyB0aGUgcmVzdWx0IG9mIGNvbWJpbmluZyBlbGVtZW50cyBvZiB0aGUgc291cmNlcyB1c2luZyB0aGUgc3BlY2lmaWVkIHJlc3VsdCBzZWxlY3RvciBmdW5jdGlvbi5cbiAgICAgICAgKi9cbiAgICAgICAgY29tYmluZUxhdGVzdDxUT3RoZXIsIFRSZXN1bHQ+KHNvdWNlczogT2JzZXJ2YWJsZU9yUHJvbWlzZTxUT3RoZXI+W10sIHJlc3VsdFNlbGVjdG9yOiAoLi4ub3RoZXJWYWx1ZXM6IFRPdGhlcltdKSA9PiBUUmVzdWx0KTogT2JzZXJ2YWJsZTxUUmVzdWx0PjtcbiAgICB9XG59XG5cbihmdW5jdGlvbigpIHtcbiAgICB2YXIgbzogUnguT2JzZXJ2YWJsZTxib29sZWFuPjtcbiAgICB2YXIgaW86IFJ4LklPYnNlcnZhYmxlPHN0cmluZz47XG4gICAgdmFyIHNvOiBSeC5TdWJqZWN0PG51bWJlcj47XG4gICAgdmFyIHA6IFJ4LlByb21pc2U8eyBhOiBzdHJpbmcgfT47XG5cbiAgICB2YXIgcjogUnguT2JzZXJ2YWJsZTx7IHZvOiBib29sZWFuLCB2aW86IHN0cmluZywgdnA6IHsgYTogc3RyaW5nIH0sIHZzbzogbnVtYmVyIH0+ID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KG8sIGlvLCBwLCBzbywgKHZvLCB2aW8sIHZwLCB2c28pID0+ICh7IHZvLCB2aW8sIHZwLCB2c28gfSkpO1xuXG4gICAgdmFyIHJyIDogUnguT2JzZXJ2YWJsZTxudW1iZXI+ID0gUnguT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KDxhbnlbXT5bbywgaW8sIHNvLCBwXSwgKGl0ZW1zKSA9PiA1KTtcbn0pO1xuIl19